{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to Loop\n\u2301\n\n\n\n\n\n\nIntroduction\n\u2301\n\n\nLoop\n is an app template for building an automated insulin delivery system. It is a stone resting on the boulders of work done by many others.  \n\n\nThe app is built on top of \nLoopKit\n. LoopKit is a set of frameworks that provide data storage, retrieval, and calculation, as well as boilerplate view controllers used in Loop.\n\n\n\n\nImportant\n\n\nPlease understand that this project:\n\n\n\n\nIs highly experimental\n\n\nIs not approved for therapy\n\n\n\n\nYou take full responsibility for building and running this system and do so at your own risk.\n\n\n\n\nUsing the open-source Loop app template, you can build an insulin delivery system that uses specific commercial and open-source hardware and software technologies to bring together the insulin pump, continuous glucose monitor (CGM), and insulin dosing algorithm to create a continuous insulin basal dosing \u201cLoop\u201d.  This Loop predicts future glucose based on basal-rate schedules, carbohydrate intake, insulin on board, and current CGM readings.  These glucose forecasts provide Loop with the information needed to recommend a temporary basal rate to attain a targeted glucose range in the future.  The system can either operate as an \u201copen-loop\u201d by making recommendations to the user for their approval before enacting or as a \u201cclosed-loop\u201d by automatically setting the recommended temporary basal rate. \n\n\nYou should undertake this project in stages. For example, first \u201copen loop\u201d to familiarize yourself with Loop\u2019s operation. Also, investigate the code to ensure you understand what it is recommending and why. Then when you progress to \u201cclosed-loop\u201d, do so safely by starting with appropriate safety limits and only progress to higher limits after several days of no lows. Please ask questions at this point about why Loop is making the recommendations it does.  It should be similar to the therapy decisions you would make yourself.  If the recommendations it makes are different than you would make, try to figure out why.\n\n\nDevelopment History\n\u2301\n\n\nLoop has been developed as an open-source, shared project.  For a really interesting read about the history of Loop development, check out this \nHistory of Loop and LoopKit\n post, written by Loop developer Nate Racklyeft.  The project continues to be a labor-of-love by a community of users; maintained and improved by volunteers.\n\n\nHow to Use These Docs\n\u2301\n\n\n\n\nUse the navigation menu at the top of the screen to find the info you are looking for.\n\n\nA Table of Contents for the current page is always displayed on the left side of the screen.\n\n\n\n\nYou can search the Loop Docs site by clicking the \n icon.\n\n\n\n\n\n\n\n\nStay in the Loop!\n\u2301\n\n\nSign up for the Loop Users announcement list\n to stay informed of critical issues that may arise.\n\n\nJoin the Zulipchat at \nhttps://loop.zulipchat.com\n\n\nThere is also a \nLooped Facebook Group\n that you might wish to join for support.  When you request to join the group, please remember to check your messages box on facebook and respond to the message.\n\n\nContribute\n\u2301\n\n\nPlease consider submitting any updates and improvements to the documentation that you want to share by submitting a Pull Request to the \nloopdocs repo\n. For more information on how to contribute to an open-source project, this \nHow to Contribute to Open Source\n guide may be useful. Also, please review the Loop \nLICENSE\n and Loop \nCODE_OF_CONDUCT\n.",
            "title": "Home"
        },
        {
            "location": "/#welcome-to-loop",
            "text": "",
            "title": "Welcome to Loop"
        },
        {
            "location": "/#introduction",
            "text": "Loop  is an app template for building an automated insulin delivery system. It is a stone resting on the boulders of work done by many others.    The app is built on top of  LoopKit . LoopKit is a set of frameworks that provide data storage, retrieval, and calculation, as well as boilerplate view controllers used in Loop.   Important  Please understand that this project:   Is highly experimental  Is not approved for therapy   You take full responsibility for building and running this system and do so at your own risk.   Using the open-source Loop app template, you can build an insulin delivery system that uses specific commercial and open-source hardware and software technologies to bring together the insulin pump, continuous glucose monitor (CGM), and insulin dosing algorithm to create a continuous insulin basal dosing \u201cLoop\u201d.  This Loop predicts future glucose based on basal-rate schedules, carbohydrate intake, insulin on board, and current CGM readings.  These glucose forecasts provide Loop with the information needed to recommend a temporary basal rate to attain a targeted glucose range in the future.  The system can either operate as an \u201copen-loop\u201d by making recommendations to the user for their approval before enacting or as a \u201cclosed-loop\u201d by automatically setting the recommended temporary basal rate.   You should undertake this project in stages. For example, first \u201copen loop\u201d to familiarize yourself with Loop\u2019s operation. Also, investigate the code to ensure you understand what it is recommending and why. Then when you progress to \u201cclosed-loop\u201d, do so safely by starting with appropriate safety limits and only progress to higher limits after several days of no lows. Please ask questions at this point about why Loop is making the recommendations it does.  It should be similar to the therapy decisions you would make yourself.  If the recommendations it makes are different than you would make, try to figure out why.",
            "title": "Introduction"
        },
        {
            "location": "/#development-history",
            "text": "Loop has been developed as an open-source, shared project.  For a really interesting read about the history of Loop development, check out this  History of Loop and LoopKit  post, written by Loop developer Nate Racklyeft.  The project continues to be a labor-of-love by a community of users; maintained and improved by volunteers.",
            "title": "Development History"
        },
        {
            "location": "/#how-to-use-these-docs",
            "text": "Use the navigation menu at the top of the screen to find the info you are looking for.  A Table of Contents for the current page is always displayed on the left side of the screen.   You can search the Loop Docs site by clicking the   icon.",
            "title": "How to Use These Docs"
        },
        {
            "location": "/#stay-in-the-loop",
            "text": "Sign up for the Loop Users announcement list  to stay informed of critical issues that may arise.  Join the Zulipchat at  https://loop.zulipchat.com  There is also a  Looped Facebook Group  that you might wish to join for support.  When you request to join the group, please remember to check your messages box on facebook and respond to the message.",
            "title": "Stay in the Loop!"
        },
        {
            "location": "/#contribute",
            "text": "Please consider submitting any updates and improvements to the documentation that you want to share by submitting a Pull Request to the  loopdocs repo . For more information on how to contribute to an open-source project, this  How to Contribute to Open Source  guide may be useful. Also, please review the Loop  LICENSE  and Loop  CODE_OF_CONDUCT .",
            "title": "Contribute"
        },
        {
            "location": "/nightscout/overview/",
            "text": "Overview\n\u2301\n\n\nNightscout (NS) is an excellent tool for remotely viewing Loop's actions.  It allows for easy remote monitoring of Loop activities, troubleshooting of Loop errors, history of CGM, carbs, boluses, & temp basals, reports analyzing data trends and patterns. There is a Nightscout app in your iPhone App Store, or you can use a web browser to view the data.  Setting up Nightscout is free and fairly quick.  Once set up, the site can be accessed by anyone that you share your unique Nightscout URL with.  \n\n\nNightscout is highly recommended for Loop users, especially those using Loop as caregivers to t1ds.  Nightscout displays are often the easiest way to troubleshoot Loop settings, if you are having problems and seeking input from others.  Below is some discussion about the general Nightscout display, as well as some Loop-specific display information.\n\n\n\n\n\n\n\n\n\n\n\n\n\nBlood Glucose\n\u2301\n\n\nYour blood glucose (BG) readings from your CGM are shown in green, yellow, or red in the main graph area of NS.  You can adjust your high and low BG targets in NS (when NS alerts will start for high/low BGs), but those will not affect your Loop performance.  Loop only uses the BG targets given in the Loop app settings.  The main screen of BGs is displaying the time duration you have selected (in the example above, 12 hours of BG history).  The bottom of the screen shows the last 48-hours of BG trends.  You can scan backward by dragging the bottom timeline to the left, if you want to review specific Loop actions or data in the last two days. \n\n\n\n\nSAGE, CAGE, BAGE pills\n\u2301\n\n\nThe SAGE, CAGE, and BAGE pills are for Sensor Age, Cannula Age, and (pump) Battery Age.  These optional pills track the time since your CGM sensor, Pump site, and Pump battery were last changed.  You can set up custom alerts to remind you when it is time to change the devices, or simply use the visuals to keep track of your particular timing for site/sensor changes. These fields will not auto-update from pump or CGM devices, instead you will have to update them using Nightscout Careportal so that the pill information is accurate.\n\n\n\n\nCarbs\n\u2301\n\n\nCarbs are automatically uploaded to NS by the Loop app.  The amount of carbs on board (active carbs or COB) can be seen by clicking the Loop pill.  The size of a white carb dot on the graph is proportional to the amount of carbs entered...bigger meals get bigger dots. Loop does not read carbs from NS for use in looping calculations, it only uploads carbs to NS that have been entered in the Loop app.\n\n\n\n\nBoluses\n\u2301\n\n\nInsulin boluses are also automatically uploaded to NS by the Loop app.  The bolus is shown as a filled-in blue lower-half of the dot, and the specific amount of the bolus is also shown.  There may be a slight delay between when the carbs for a meal are uploaded to NS to when the meal bolus appears.  This is because depending on the pump model and size of bolus, the bolus may take a few minutes to actually be administered then Loop has to perform a pump read to verify the reservoir volume has decreased (i.e., the bolus was given).  As shown in the example above, the meal carbs have been uploaded, but the bolus delivery is still in progress.  Insulin on board (active insulin or IOB) is also shown in the Loop pill.\n\n\n\n\nTemp Basals\n\u2301\n\n\nWithin your NS profile, you will enter in the scheduled basal for your Loop user.  This is not automatically updated when you update the Loop app or your pump; you will have to manually update your basal profile in your NS site if you change your basal profile in Loop and/or pump. (Note: The dev branch does now update NS with the basal schedule from Loop, but dev is considered generally less stable than the master branch).   If you don't update the NS basal profile, it doesn't cause any problems in Loop function...you simply won't have accurate VISUAL representation of high/low temp basals within NS. The dashed blue line represents the scheduled basal profile (as entered in your NS profile).  The solid blue lines indicate the actual basal amounts set for a given time...so as Loop sets temp basals higher or lower than your scheduled basal rate, the solid blue line will jump above or below your dashed blue line.  There is a slight delay (up to 2-5 minutes) in the rendering of basal changes on the blue lines, so if you want the accurate current basal rate, you can check the Loop pill.\n\n\n\n\nPredicted BG\n\u2301\n\n\nThe purple line to the right of the BG is Loop's predicted BG.  Watching the behavior of that purple line can help you understand why Loop is making decisions regarding high or low temps.  You can read more on that topic in the Algorithm section of these docs.\n\n\n\n\nLoop pill\n\u2301\n\n\nThe Loop pill is the little display box which when hovered over, or clicked, will provide additional information about recent Loop activities and status.  Information included is the last time Loop ran, the temp basal set, IOB, and COB.  Looking at the Loop pill is a quick method for assessing if you loop is currently active, as well.\n\n\n\n\nLoop Pill status indicator symbols\n\n\nX\n \u00a0\nError in Loop\n\n\n\u03d5\n \u00a0\nRecommending basal, but not enacting (open loop or pump suspended)\n\n\n\u2301\n \u00a0\nEnacted a new temp basal\n\n\n\u21bb\n \u00a0\nLoop is continuing with last temp basal, no change\n\n\n\u26a0\n \u00a0\nWarning indicating Loop is either red or has failed to upload to Nightscout for a longer period of time.\n\n\n\n\nMouseover or Touch the Loop pill to view a tool tip containing one or more of the latest status messages. The most up-to-date NS also includes information in the Loop pill for the minimum and maximum predicted BG, eventual and predicted BG.",
            "title": "Overview"
        },
        {
            "location": "/nightscout/overview/#overview",
            "text": "Nightscout (NS) is an excellent tool for remotely viewing Loop's actions.  It allows for easy remote monitoring of Loop activities, troubleshooting of Loop errors, history of CGM, carbs, boluses, & temp basals, reports analyzing data trends and patterns. There is a Nightscout app in your iPhone App Store, or you can use a web browser to view the data.  Setting up Nightscout is free and fairly quick.  Once set up, the site can be accessed by anyone that you share your unique Nightscout URL with.    Nightscout is highly recommended for Loop users, especially those using Loop as caregivers to t1ds.  Nightscout displays are often the easiest way to troubleshoot Loop settings, if you are having problems and seeking input from others.  Below is some discussion about the general Nightscout display, as well as some Loop-specific display information.",
            "title": "Overview"
        },
        {
            "location": "/nightscout/overview/#blood-glucose",
            "text": "Your blood glucose (BG) readings from your CGM are shown in green, yellow, or red in the main graph area of NS.  You can adjust your high and low BG targets in NS (when NS alerts will start for high/low BGs), but those will not affect your Loop performance.  Loop only uses the BG targets given in the Loop app settings.  The main screen of BGs is displaying the time duration you have selected (in the example above, 12 hours of BG history).  The bottom of the screen shows the last 48-hours of BG trends.  You can scan backward by dragging the bottom timeline to the left, if you want to review specific Loop actions or data in the last two days.",
            "title": "Blood Glucose"
        },
        {
            "location": "/nightscout/overview/#sage-cage-bage-pills",
            "text": "The SAGE, CAGE, and BAGE pills are for Sensor Age, Cannula Age, and (pump) Battery Age.  These optional pills track the time since your CGM sensor, Pump site, and Pump battery were last changed.  You can set up custom alerts to remind you when it is time to change the devices, or simply use the visuals to keep track of your particular timing for site/sensor changes. These fields will not auto-update from pump or CGM devices, instead you will have to update them using Nightscout Careportal so that the pill information is accurate.",
            "title": "SAGE, CAGE, BAGE pills"
        },
        {
            "location": "/nightscout/overview/#carbs",
            "text": "Carbs are automatically uploaded to NS by the Loop app.  The amount of carbs on board (active carbs or COB) can be seen by clicking the Loop pill.  The size of a white carb dot on the graph is proportional to the amount of carbs entered...bigger meals get bigger dots. Loop does not read carbs from NS for use in looping calculations, it only uploads carbs to NS that have been entered in the Loop app.",
            "title": "Carbs"
        },
        {
            "location": "/nightscout/overview/#boluses",
            "text": "Insulin boluses are also automatically uploaded to NS by the Loop app.  The bolus is shown as a filled-in blue lower-half of the dot, and the specific amount of the bolus is also shown.  There may be a slight delay between when the carbs for a meal are uploaded to NS to when the meal bolus appears.  This is because depending on the pump model and size of bolus, the bolus may take a few minutes to actually be administered then Loop has to perform a pump read to verify the reservoir volume has decreased (i.e., the bolus was given).  As shown in the example above, the meal carbs have been uploaded, but the bolus delivery is still in progress.  Insulin on board (active insulin or IOB) is also shown in the Loop pill.",
            "title": "Boluses"
        },
        {
            "location": "/nightscout/overview/#temp-basals",
            "text": "Within your NS profile, you will enter in the scheduled basal for your Loop user.  This is not automatically updated when you update the Loop app or your pump; you will have to manually update your basal profile in your NS site if you change your basal profile in Loop and/or pump. (Note: The dev branch does now update NS with the basal schedule from Loop, but dev is considered generally less stable than the master branch).   If you don't update the NS basal profile, it doesn't cause any problems in Loop function...you simply won't have accurate VISUAL representation of high/low temp basals within NS. The dashed blue line represents the scheduled basal profile (as entered in your NS profile).  The solid blue lines indicate the actual basal amounts set for a given time...so as Loop sets temp basals higher or lower than your scheduled basal rate, the solid blue line will jump above or below your dashed blue line.  There is a slight delay (up to 2-5 minutes) in the rendering of basal changes on the blue lines, so if you want the accurate current basal rate, you can check the Loop pill.",
            "title": "Temp Basals"
        },
        {
            "location": "/nightscout/overview/#predicted-bg",
            "text": "The purple line to the right of the BG is Loop's predicted BG.  Watching the behavior of that purple line can help you understand why Loop is making decisions regarding high or low temps.  You can read more on that topic in the Algorithm section of these docs.",
            "title": "Predicted BG"
        },
        {
            "location": "/nightscout/overview/#loop-pill",
            "text": "The Loop pill is the little display box which when hovered over, or clicked, will provide additional information about recent Loop activities and status.  Information included is the last time Loop ran, the temp basal set, IOB, and COB.  Looking at the Loop pill is a quick method for assessing if you loop is currently active, as well.   Loop Pill status indicator symbols  X  \u00a0\nError in Loop  \u03d5  \u00a0\nRecommending basal, but not enacting (open loop or pump suspended)  \u2301  \u00a0\nEnacted a new temp basal  \u21bb  \u00a0\nLoop is continuing with last temp basal, no change  \u26a0  \u00a0\nWarning indicating Loop is either red or has failed to upload to Nightscout for a longer period of time.   Mouseover or Touch the Loop pill to view a tool tip containing one or more of the latest status messages. The most up-to-date NS also includes information in the Loop pill for the minimum and maximum predicted BG, eventual and predicted BG.",
            "title": "Loop pill"
        },
        {
            "location": "/nightscout/new_user/",
            "text": "New Nightscout Users\n\u2301\n\n\nThere are two options for setting up Nightscout; one option requires a small fee but automates both the setup and periodic updating/cleaning database, the other option is free but requires your effort to build and update. You choose which works best for you. Isn't it nice to have options?\n\n\nT1Pal (paid service)\n\u2301\n\n\nT1Pal is only dedicated NS hosting\n company.  There is a hosting fee required which is used to help ensure Nightscout runs without limits and receives improvements.  Setup is simple and loop plugins are configured automatically during the setup guide.\n\n\n\n\nSelect \nGet Started\n to register an account at \nT1Pal\n.  You will need to enter your credit card, which helps ensure Nightscout is running correctly.\n\n\nSelect \"visualize treatments\" in the setup menu and select \"loop.\"\n\n\n\n\n\n\n\n\n\n\n\nTraditional DIY (free, do-it-yourself)\n\u2301\n\n\nTwo options exist for easy DIY hosting of NS; Azure or Heroku. Both hosting services are free.  However,  Azure has data quotas monthly and shorter-term CPU quotas.  If you exceed those quotas, you may be facing a monthly data-use bill or being locked out of NS for about 12 hours until the quotas reset.  As you start to use NS more intensively for alarms, pebble watches, etc\u2026it is possible that you may exceed your monthly data cap on Azure.  Many Loop users have transitioned their old sites from Azure over to Heroku and have found the hosting change to be beneficial.  Heroku also has some memory limits, but those limits have been more than adequate for Loop users.  Therefore, we recommend new users start with Heroku.\n\n\nIf you are the person who enjoys videos...here's a YouTube video that you can use to walk-through with these directions. Just give it a click.\n\n\n\n\n\n\n\n\n\nIf you don't enjoy videos, then here is a step-by-step guide for completing your own Nightscout site DIY style.\n\n\nStep 1: Heroku Account\n\u2301\n\n\nCreate an account at \nHeroku's signup page\n. \n\n\nEnter your name, email address, role (\"Hobbyist\" is fine) and choose \"Node.js\" as the Primary Development Language.  When you get all those entered, confirm that you are not a robot and click the blue \"Create Free Account\" button\n\n\n\n\n\n\n\n\n\nNow follow the directions and check your email to confirm your Heroku account. You'll be asked to create a password...save that password somewhere. You'll likely be logging into Heroku as part of Looping in the future, so this is a good password to save.\n\n\nWhen you finish creating the password, you'll see a screen like below.\n\n\n\n\n\n\n\n\n\nWe have to complete one last step...adding a credit card to your Heroku account. Don't worry, Heroku is still free...but it's only free if you leave a credit card on file. I've used Heroku for 6 years now and never been charged.\n\n\nTo add your credit card, click on the icon of a little ninja person in the upper right corner of the Heroku site, and then select Account Settings and then Billing...or \nthis should take you right to the billing page for your account\n. Then click the purple \"Add credit card\" button. Finish the steps to add a credit card.\n\n\n\n\n\n\n\n\n\nOnce you finish that, you can just leave that page/tab alone and move on down to the next step below. \n\n\nStep 2: Create an account at GitHub\n\u2301\n\n\nGo to \nGitHub's signup page\n. Fill out the information to create your own unique username (write it down), email address, and password (also write this one down). Verify that you are a real person by tossing an animal's image around until it is upright...and then you'll be able to click the green \"create an account\" at the bottom of the page\n\n\n\n\n\n\n\n\n\nGithub will then ask if you want the Free Account (duh, yes). Confirm that (and unclick the Newsletter subscription if you don't want spam).\n\n\nFinally, Github will ask you a little about your programming experience and what you are going to use GitHub for...you can answer those or choose the \"skip this step\" option at the bottom of the screen.\n\n\nFinally, you'll be sent the email to verify your new account. Go to your emails and click the link sent to you.\n\n\nStep 3: Fork and deploy cgm-remote-monitor\n\u2301\n\n\nNow go to the \nNightscout cgm-remote-monitor repository\n. This is where the Nightscout developer's store their code that we are going to borrow a copy of. A copy of code in Github is called a \"fork\". In the upper right corner, you'll find a little button labeled \nFork\n.  Click that button and you'll see a message that GitHub is cloning/forking a copy of that code to your GitHub account.  That is a good thing.  Don't worry it only takes a few seconds.\n\n\n\n\n\n\n\n\n\n\nOnce the forking is done, scroll down (below all those folder and file names) until you see the purple \nDeploy to Heroku\n button. Click that button.\n\n\n\n\n\n\n\n\n\n\n\nPretty quickly, you should see a Heroku screen popup for \"Create New App\".  If you see that, you're good to go onto the next step to start setting up the Heroku Nightscout app.\n\n\n\nStep 4: Setup your Heroku Nightscout app\n\u2301\n\n\nHeroku calls the code that you just deployed an \"app\"...but probably easier for most people to imagine it as a website. \n\n\nThe first step is to give your \"app\" a name, this will be the prefix of your soon-to-be-created Nightscout site\u2019s URL. For example, if you enter \"janehasthesugars\" then your Nightscout site's URL will be \nhttps://janehasthesugars.herokuapp.com\n\n\n\n\n\n\n\n\n\nNow scroll down a bit and we are going to fill out the information lines in the \nConfig Vars\n section (circled in red above) of that page. There are many variables listed in that section, but we will only \nneed\n to edit a few of them right now to get started. You can always go back later and edit the default values of your BG alarms and other defaults (or do it now, if you'd like). The variables listed below though do need you to make some edits/entries or review that the default settings work for your situation.\n\n\n\n\n\n\n\n\nVARIABLE\n\n\nVALUE\n\n\n\n\n\n\n\n\n\n\nAPI_SECRET\n\n\nCreate your own API_SECRET\u2026this is like the password to your NS site.  Please write it down somewhere safe or commit it to memory, you will be using it in the future.  It needs to be at least 12 characters long and should NOT use the @ or ! symbols.\n\n\n\n\n\n\nDISPLAY_UNITS\n\n\ndefault is mg/dl, you'll need to change to mmol if that's what you use\n\n\n\n\n\n\nENABLE\n\n\nbridge loop pump iob cob basal careportal sage cage bage openaps override\n(Enter all of the words above without commas.  Just add a single space between each word. Make sure autocorrect does not add space between careportal. Typically, the words basal and careportal will already be there waiting for you.)\n\n\n\n\n\n\nBRIDGE_USER_NAME\n\n\nEnter your Dexcom Share Account login name. This is not an email address. This should be the same account name used in the Looper's Dexcom app.\n\n\n\n\n\n\nBRIDGE_PASSWORD\n\n\nEnter your Dexcom Share Account password.\n\n\n\n\n\n\nBRIDGE_SERVER\n\n\nThe default assumes the Dexcom user is using a US Dexcom account. \nIf you are outside the US, you need to change this entry to EU.\n\n\n\n\n\n\n\n\n\n\n\n\n\nMOST COMMON ERRORS\n\n\nThe \nBRIDGE_PASSWORD\n and \nBRIDGE_USER_NAME\n are NOT visible from within your Dexcom app or online account. The values for them are what you entered into your Dexcom mobile app when you VERY FIRST logged into that app however long ago. The \nBRIDGE_USER_NAME\n is not an email address. The most common error on initial Nightscout setups is that people incorrectly use an old account or an old password. To test your username and password, go to \nDexcom's Clarity\n page and try logging into your Dexcom account. If your account info doesn't let you in, or you don't see data in your Clarity account...then you need to figure out your actual credentials before moving ahead.\n\n\n\n\n\n\nIf you are using Dexcom Share outside the United States, you will need to make sure you have EU in the BRIDGE_SERVER.\n\n\n\n\n\n\n\n\n\nKEY\n\n\nVALUE\n\n\n\n\n\n\n\n\n\n\nBRIDGE_SERVER\n\n\nEU\n\n\n\n\n\n\n\n\n\n\nNow that we have all the variables fixed up, click the purple \nDeploy\n button at the bottom of screen\n\n\n\n\n\n\n\n \n\n\nWait about 5 minutes while Heroku builds your Nightscout app. You\u2019ll see some text scroll by in the Build App box, and then finally, you will have a message that the app was successfully deployed.\n\n\n\n\n\n\n\n \n\n\n\nClick on the \nManage App\n button and then we will move onto the next step.\n\n\nStep 5: Additional Variables\n\u2301\n\n\nSelect the \nSettings\n tab near the top of the screen on your Heroku app. Click on \nReveal Config  Vars\n button that will be partway down the page. \n\n\n\n\n\n\n\n\n\n\nScroll down to the bottom of the variables list until you find the last blank one. \n\n\n\n\n\n\n\n\n\n\n\nYou are going to add several additional lines of variables specifically for Loop use; the \nDEVICESTATUS_ADVANCED\n is a required line, the others just make Nightscout more useful when Looping.\n\n\n\n\n\n\n\n\n\nKEY\n\n\nVALUE\n\n\n\n\n\n\n\n\n\n\nDEVICESTATUS_ADVANCED\n\n\ntrue\n\n\n\n\n\n\nPUMP_FIELDS\n\n\nbattery reservoir clock status\n\n\n\n\n\n\nPUMP_RETRO_FIELDS\n\n\nbattery reservoir clock status\n\n\n\n\n\n\nSHOW_FORECAST\n\n\nloop\n\n\n\n\n\n\nSHOW_PLUGINS\n\n\nloop pump cob iob sage cage careportal basal\n\n\n\n\n\n\nLOOP_ENABLE_ALERTS\n\n\ntrue\n\n\n\n\n\n\nLOOP_WARN\n\n\n20\n(This is the minutes since Loop last successfully looped, the t1d will have a similar notification at this time through the Loop app.  This will be a yellow alert in NS.)\n\n\n\n\n\n\nLOOP_URGENT\n\n\n60\n(Same as the alert above, but will be red in color and have a shorter snooze option.)\n\n\n\n\n\n\nBASAL_RENDER\n\n\ndefault\n\n\n\n\n\n\n\n\n\nFinally, I recommend deleting the \nPAPERTRAIL_API_TOKEN\n line. Heroku offers a free, tiny amount of Papertrail service (like a logging service for how the site is running), but really offers only confusion to most people later when they get a message that their \"Free Papertrail Service has run out of room\". Papertrail is not needed, and really doesn't provide useful info for Nightscout users anyways...so best to just delete that line and never have to get the useless email in the first place.\n\n\nStep 6: Setup Profile\n\u2301\n\n\nNow that we have finished all the variable setup, scroll up to the top of the page and click on the \nOpen App\n button in the top right corner of your Heroku site.\n\n\n\n\n\n\n\n\n\nYou will see black site with a profile warning at the top of the screen. Confirm to redirect to a profile set-up page.  (If it doesn't redirect automatically, refresh your webpage...might have to push the button a few times).  \n\n\n\n\n\n\n\n\n\nYou do not have to enter all the information in the profile if you are using Loop (since Loop will be providing the information for IOB and COB rather than letting NS calculate them), but you do have to fill out the \nTimeZone\n. That one is non-negotiable. I highly recommend also filling in the \nInsulin to carb ratio\n, \nInsulin Sensitivity Factor\n, and \nBasal Rates\n so that your information is properly displayed in Nightscout. To be clear, those values you enter in the Profile will not affect your Loop in any way, because Loop will not read them from Nightscout. New versions of Loop will also update these values in this Profile if you change the corresponding settings in Loop. So really, this is just a one-time setup and after that Loop will do the work of updating these values. \n\n\nClick \nSave\n when you have entered the information.  You will be prompted to authenticate, if it is the first time you\u2019ve used the device to make changes in your profile.  Click on the \nAuthenticate\n link at the bottom of the site, and enter your API_SECRET to complete the authentication.\n\n\n\n\n\n\n\n\n\n\n\nClose out of the Profile Editor to return to the main Nightscout page and configure your NS settings.\n\n\nStep 7: Nightscout Settings\n\u2301\n\n\nThe last step is to finish your Nightscout's settings. Click on the settings (those three horizontal lines in upper right corner).  Now check that you have everything displaying correctly:\n\n\n\n\nRender Basal\n is set to either default or icicle (totally personal preference for how the temp basals show as blue lines in NS site)\n\n\nTheme is set to Colors\n\n\nCheck the boxes that you\u2019d like display pills in the SHOW PLUGINS (usually all of them except Openaps) section.\n\n\n\n\n\n\n\n\n\n\n\nSave the settings changes and you'll be on your way! Congrats!!\n\n\nStep 8: Loop Settings\n\u2301\n\n\nDon't forget to enter your new Nightscout site into your Loop settings! That way Loop can upload all the juicy great info directly to your Nightscout site (except CGM data...that is all handled by that BRIDGE info you put in earlier)\n\n\nDirections \nhere\n as well as warnings about the two most common errors when people add the URL to Loop settings. (Hint hint hint)\n\n\nDIY Troubleshooting\n\u2301\n\n\nIf your site is not showing CGM (and Loop, if you are Looping) data within about 10 minutes of finishing your setup, then please follow these steps \nhere\n to troubleshoot.\n\n\nFuture warning (for DIY users)\n\u2301\n\n\nAt some point in the future months, your Nightscout site will likely stop in some quirky way...like CGM data won't be showing is the most common. This won't affect Looping, but it might be kind of annoying if you are a parent using Nightscout for remote info. The reason? The database Heroku gives us for free has some size limitations. After several months of Looping, you'll likely fill up that free amount of space and we will need to cleanout in order to make room.\n\n\nSo...keep it in your head that if you see something odd with your NS site (like no CGM even though Dexcom is working), then please check \nthis page to learn how you can cleanout the database\n. It is easy and fast...no worries.",
            "title": "Brand New NS"
        },
        {
            "location": "/nightscout/new_user/#new-nightscout-users",
            "text": "There are two options for setting up Nightscout; one option requires a small fee but automates both the setup and periodic updating/cleaning database, the other option is free but requires your effort to build and update. You choose which works best for you. Isn't it nice to have options?",
            "title": "New Nightscout Users"
        },
        {
            "location": "/nightscout/new_user/#t1pal-paid-service",
            "text": "T1Pal is only dedicated NS hosting  company.  There is a hosting fee required which is used to help ensure Nightscout runs without limits and receives improvements.  Setup is simple and loop plugins are configured automatically during the setup guide.   Select  Get Started  to register an account at  T1Pal .  You will need to enter your credit card, which helps ensure Nightscout is running correctly.  Select \"visualize treatments\" in the setup menu and select \"loop.\"",
            "title": "T1Pal (paid service)"
        },
        {
            "location": "/nightscout/new_user/#traditional-diy-free-do-it-yourself",
            "text": "Two options exist for easy DIY hosting of NS; Azure or Heroku. Both hosting services are free.  However,  Azure has data quotas monthly and shorter-term CPU quotas.  If you exceed those quotas, you may be facing a monthly data-use bill or being locked out of NS for about 12 hours until the quotas reset.  As you start to use NS more intensively for alarms, pebble watches, etc\u2026it is possible that you may exceed your monthly data cap on Azure.  Many Loop users have transitioned their old sites from Azure over to Heroku and have found the hosting change to be beneficial.  Heroku also has some memory limits, but those limits have been more than adequate for Loop users.  Therefore, we recommend new users start with Heroku.  If you are the person who enjoys videos...here's a YouTube video that you can use to walk-through with these directions. Just give it a click.     If you don't enjoy videos, then here is a step-by-step guide for completing your own Nightscout site DIY style.",
            "title": "Traditional DIY (free, do-it-yourself)"
        },
        {
            "location": "/nightscout/new_user/#step-1-heroku-account",
            "text": "Create an account at  Heroku's signup page .   Enter your name, email address, role (\"Hobbyist\" is fine) and choose \"Node.js\" as the Primary Development Language.  When you get all those entered, confirm that you are not a robot and click the blue \"Create Free Account\" button     Now follow the directions and check your email to confirm your Heroku account. You'll be asked to create a password...save that password somewhere. You'll likely be logging into Heroku as part of Looping in the future, so this is a good password to save.  When you finish creating the password, you'll see a screen like below.     We have to complete one last step...adding a credit card to your Heroku account. Don't worry, Heroku is still free...but it's only free if you leave a credit card on file. I've used Heroku for 6 years now and never been charged.  To add your credit card, click on the icon of a little ninja person in the upper right corner of the Heroku site, and then select Account Settings and then Billing...or  this should take you right to the billing page for your account . Then click the purple \"Add credit card\" button. Finish the steps to add a credit card.     Once you finish that, you can just leave that page/tab alone and move on down to the next step below.",
            "title": "Step 1: Heroku Account"
        },
        {
            "location": "/nightscout/new_user/#step-2-create-an-account-at-github",
            "text": "Go to  GitHub's signup page . Fill out the information to create your own unique username (write it down), email address, and password (also write this one down). Verify that you are a real person by tossing an animal's image around until it is upright...and then you'll be able to click the green \"create an account\" at the bottom of the page     Github will then ask if you want the Free Account (duh, yes). Confirm that (and unclick the Newsletter subscription if you don't want spam).  Finally, Github will ask you a little about your programming experience and what you are going to use GitHub for...you can answer those or choose the \"skip this step\" option at the bottom of the screen.  Finally, you'll be sent the email to verify your new account. Go to your emails and click the link sent to you.",
            "title": "Step 2: Create an account at GitHub"
        },
        {
            "location": "/nightscout/new_user/#step-3-fork-and-deploy-cgm-remote-monitor",
            "text": "Now go to the  Nightscout cgm-remote-monitor repository . This is where the Nightscout developer's store their code that we are going to borrow a copy of. A copy of code in Github is called a \"fork\". In the upper right corner, you'll find a little button labeled  Fork .  Click that button and you'll see a message that GitHub is cloning/forking a copy of that code to your GitHub account.  That is a good thing.  Don't worry it only takes a few seconds.     \nOnce the forking is done, scroll down (below all those folder and file names) until you see the purple  Deploy to Heroku  button. Click that button.     \nPretty quickly, you should see a Heroku screen popup for \"Create New App\".  If you see that, you're good to go onto the next step to start setting up the Heroku Nightscout app.",
            "title": "Step 3: Fork and deploy cgm-remote-monitor"
        },
        {
            "location": "/nightscout/new_user/#step-4-setup-your-heroku-nightscout-app",
            "text": "Heroku calls the code that you just deployed an \"app\"...but probably easier for most people to imagine it as a website.   The first step is to give your \"app\" a name, this will be the prefix of your soon-to-be-created Nightscout site\u2019s URL. For example, if you enter \"janehasthesugars\" then your Nightscout site's URL will be  https://janehasthesugars.herokuapp.com     Now scroll down a bit and we are going to fill out the information lines in the  Config Vars  section (circled in red above) of that page. There are many variables listed in that section, but we will only  need  to edit a few of them right now to get started. You can always go back later and edit the default values of your BG alarms and other defaults (or do it now, if you'd like). The variables listed below though do need you to make some edits/entries or review that the default settings work for your situation.     VARIABLE  VALUE      API_SECRET  Create your own API_SECRET\u2026this is like the password to your NS site.  Please write it down somewhere safe or commit it to memory, you will be using it in the future.  It needs to be at least 12 characters long and should NOT use the @ or ! symbols.    DISPLAY_UNITS  default is mg/dl, you'll need to change to mmol if that's what you use    ENABLE  bridge loop pump iob cob basal careportal sage cage bage openaps override (Enter all of the words above without commas.  Just add a single space between each word. Make sure autocorrect does not add space between careportal. Typically, the words basal and careportal will already be there waiting for you.)    BRIDGE_USER_NAME  Enter your Dexcom Share Account login name. This is not an email address. This should be the same account name used in the Looper's Dexcom app.    BRIDGE_PASSWORD  Enter your Dexcom Share Account password.    BRIDGE_SERVER  The default assumes the Dexcom user is using a US Dexcom account.  If you are outside the US, you need to change this entry to EU.       MOST COMMON ERRORS  The  BRIDGE_PASSWORD  and  BRIDGE_USER_NAME  are NOT visible from within your Dexcom app or online account. The values for them are what you entered into your Dexcom mobile app when you VERY FIRST logged into that app however long ago. The  BRIDGE_USER_NAME  is not an email address. The most common error on initial Nightscout setups is that people incorrectly use an old account or an old password. To test your username and password, go to  Dexcom's Clarity  page and try logging into your Dexcom account. If your account info doesn't let you in, or you don't see data in your Clarity account...then you need to figure out your actual credentials before moving ahead.    If you are using Dexcom Share outside the United States, you will need to make sure you have EU in the BRIDGE_SERVER.     KEY  VALUE      BRIDGE_SERVER  EU      Now that we have all the variables fixed up, click the purple  Deploy  button at the bottom of screen      \nWait about 5 minutes while Heroku builds your Nightscout app. You\u2019ll see some text scroll by in the Build App box, and then finally, you will have a message that the app was successfully deployed.       Click on the  Manage App  button and then we will move onto the next step.",
            "title": "Step 4: Setup your Heroku Nightscout app"
        },
        {
            "location": "/nightscout/new_user/#step-5-additional-variables",
            "text": "Select the  Settings  tab near the top of the screen on your Heroku app. Click on  Reveal Config  Vars  button that will be partway down the page.      \nScroll down to the bottom of the variables list until you find the last blank one.      \nYou are going to add several additional lines of variables specifically for Loop use; the  DEVICESTATUS_ADVANCED  is a required line, the others just make Nightscout more useful when Looping.     KEY  VALUE      DEVICESTATUS_ADVANCED  true    PUMP_FIELDS  battery reservoir clock status    PUMP_RETRO_FIELDS  battery reservoir clock status    SHOW_FORECAST  loop    SHOW_PLUGINS  loop pump cob iob sage cage careportal basal    LOOP_ENABLE_ALERTS  true    LOOP_WARN  20 (This is the minutes since Loop last successfully looped, the t1d will have a similar notification at this time through the Loop app.  This will be a yellow alert in NS.)    LOOP_URGENT  60 (Same as the alert above, but will be red in color and have a shorter snooze option.)    BASAL_RENDER  default     \nFinally, I recommend deleting the  PAPERTRAIL_API_TOKEN  line. Heroku offers a free, tiny amount of Papertrail service (like a logging service for how the site is running), but really offers only confusion to most people later when they get a message that their \"Free Papertrail Service has run out of room\". Papertrail is not needed, and really doesn't provide useful info for Nightscout users anyways...so best to just delete that line and never have to get the useless email in the first place.",
            "title": "Step 5: Additional Variables"
        },
        {
            "location": "/nightscout/new_user/#step-6-setup-profile",
            "text": "Now that we have finished all the variable setup, scroll up to the top of the page and click on the  Open App  button in the top right corner of your Heroku site.     You will see black site with a profile warning at the top of the screen. Confirm to redirect to a profile set-up page.  (If it doesn't redirect automatically, refresh your webpage...might have to push the button a few times).       You do not have to enter all the information in the profile if you are using Loop (since Loop will be providing the information for IOB and COB rather than letting NS calculate them), but you do have to fill out the  TimeZone . That one is non-negotiable. I highly recommend also filling in the  Insulin to carb ratio ,  Insulin Sensitivity Factor , and  Basal Rates  so that your information is properly displayed in Nightscout. To be clear, those values you enter in the Profile will not affect your Loop in any way, because Loop will not read them from Nightscout. New versions of Loop will also update these values in this Profile if you change the corresponding settings in Loop. So really, this is just a one-time setup and after that Loop will do the work of updating these values.   Click  Save  when you have entered the information.  You will be prompted to authenticate, if it is the first time you\u2019ve used the device to make changes in your profile.  Click on the  Authenticate  link at the bottom of the site, and enter your API_SECRET to complete the authentication.      Close out of the Profile Editor to return to the main Nightscout page and configure your NS settings.",
            "title": "Step 6: Setup Profile"
        },
        {
            "location": "/nightscout/new_user/#step-7-nightscout-settings",
            "text": "The last step is to finish your Nightscout's settings. Click on the settings (those three horizontal lines in upper right corner).  Now check that you have everything displaying correctly:   Render Basal  is set to either default or icicle (totally personal preference for how the temp basals show as blue lines in NS site)  Theme is set to Colors  Check the boxes that you\u2019d like display pills in the SHOW PLUGINS (usually all of them except Openaps) section.      Save the settings changes and you'll be on your way! Congrats!!",
            "title": "Step 7: Nightscout Settings"
        },
        {
            "location": "/nightscout/new_user/#step-8-loop-settings",
            "text": "Don't forget to enter your new Nightscout site into your Loop settings! That way Loop can upload all the juicy great info directly to your Nightscout site (except CGM data...that is all handled by that BRIDGE info you put in earlier)  Directions  here  as well as warnings about the two most common errors when people add the URL to Loop settings. (Hint hint hint)",
            "title": "Step 8: Loop Settings"
        },
        {
            "location": "/nightscout/new_user/#diy-troubleshooting",
            "text": "If your site is not showing CGM (and Loop, if you are Looping) data within about 10 minutes of finishing your setup, then please follow these steps  here  to troubleshoot.",
            "title": "DIY Troubleshooting"
        },
        {
            "location": "/nightscout/new_user/#future-warning-for-diy-users",
            "text": "At some point in the future months, your Nightscout site will likely stop in some quirky way...like CGM data won't be showing is the most common. This won't affect Looping, but it might be kind of annoying if you are a parent using Nightscout for remote info. The reason? The database Heroku gives us for free has some size limitations. After several months of Looping, you'll likely fill up that free amount of space and we will need to cleanout in order to make room.  So...keep it in your head that if you see something odd with your NS site (like no CGM even though Dexcom is working), then please check  this page to learn how you can cleanout the database . It is easy and fast...no worries.",
            "title": "Future warning (for DIY users)"
        },
        {
            "location": "/nightscout/update_user/",
            "text": "Adding Loop to Existing NS\n\u2301\n\n\nMany people may already have an existing Nightscout site setup from before adding Loop to their management strategies. In order to make the most of your Looping setup, you will need to modify your existing Nightscout site a bit specifically for Loop. The process is pretty easy and should not take long.\n\n\nNew Loopers Variables\n\u2301\n\n\nThe modifications for retrofitting an existing NS site for new Loop users will require you to make some edits to your Heroku site.  There are five steps:\n\n\n\n\nLogin to Heroku, Open Settings Tab\n\n\nEdit/Add Config Vars\n\n\nOpen Nightscout Site\n\n\nTurn on Plugins\n\n\nUpdate Profile Settings\n\n\n\n\nStep 1: Login to Heroku, Settings Tab\n\u2301\n\n\nLogin to your Heroku account\n, select the \nSettings\n tab near the top of the screen on your Heroku app.\n\n\n\n\n\n\n\n\n\nStep 2: Edit/Add Config Vars\n\u2301\n\n\nClick on \nReveal Config Vars\n.  Scroll down the bottom of the Config Vars lines until you find the last blank one.  You are going to add several additional lines of config vars for Loop use; the DEVICESTATUS_ADVANCED and ENABLE lines are required, the others just make Nightscout more useful when Looping.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nENABLE\n\n\nbridge loop pump iob cob basal careportal sage cage basal\n\n\n(Note: If you are an existing NS user, you likely already have an ENABLE line in this section of Heroku. Don't add a new one. Simply find the existing ENABLE line, click on the little pencil icon to the right of it, and add the words shown on the ENABLE line below to the existing words already on the enable line.  Avoid duplicates. The remainder of the lines are likely going to be brand new additions to your Heroku settings.)\n\n\n\n\n\n\nDEVICESTATUS_ADVANCED\n\n\ntrue\n\n\n\n\n\n\nPUMP_FIELDS\n\n\nbattery reservoir clock status\n\n\n\n\n\n\nPUMP_RETRO_FIELDS\n\n\nbattery reservoir clock status\n\n\n\n\n\n\nSHOW_FORECAST\n\n\nloop\n\n\n\n\n\n\nSHOW_PLUGINS\n\n\nloop pump cob iob sage cage careportal\n\n\n\n\n\n\nPUMP_ENABLE_ALERTS\n\n\ntrue\n\n\n\n\n\n\nPUMP_URGENT_BATT_U\n\n\n30\n(This is the pump battery percentage that will trigger a red, urgent alert in NS.)\n\n\n\n\n\n\nPUMP_URGENT_BATT_V\n\n\n1.25\n(This is the pump battery voltage that will trigger a red, urgent alert in NS.)\n\n\n\n\n\n\nPUMP_URGENT_RES\n\n\n10\n(This is the reservoir volume that will trigger a red, urgent alert in NS.)\n\n\n\n\n\n\nPUMP_URGENT_CLOCK\n\n\n30\n\n\n\n\n\n\nLOOP_ENABLE_ALERTS\n\n\ntrue\n\n\n\n\n\n\nLOOP_WARN\n\n\n20\n(This is the minutes since Loop last successfully looped, the t1d will have a similar notification at this time through the Loop app.  This will be a yellow alert in NS.)\n\n\n\n\n\n\nLOOP_URGENT\n\n\n60\n(Same as the alert above, but will be red in color and have a shorter snooze option.)\n\n\n\n\n\n\nBASAL_RENDER\n\n\ndefault\n\n\n\n\n\n\n\n\n\nStep 3: Open Your NS Site\n\u2301\n\n\nClick on \nOpen App\n in the top right corner of your Heroku site.\n\n\n\n\n\n\n\n\n\nStep 4: Turn on Plugins\n\u2301\n\n\nClick on the settings (those three horizontal lines in the upper right corner).  Now check that your basal render is selected to either default or icicle (personal preference for how the temp basals show as blue lines in NS site), check the boxes that you\u2019d like display pills in the SHOW PLUGINS (usually all of them), and then click save. If you have not authenticated your site previously, you may be prompted to provide your API Secret prior to Nightscout saving your changes. \n\n\n\n\n\n\n\n\n\nStep 5: Update Profile Settings\n\u2301\n\n\nDouble-check that your NS Profile settings are current and that you have a basal profile entered, if you want to see the temp basals that Loop is setting. The values in your Nightscout Profile settings will not impact or affect your Loop, but it is just nice to have them match up in the event you are looking at your data with an endocrinologist or retrospectively looking at data.\n\n\nNightscout Version Update\n\u2301\n\n\nIf you are new to Loop and haven\u2019t updated your NS site since before December 1, 2016, you will want to update your NS site. You can run either the \"master\" or \"dev\" branches of cgm-remote-monitor with Loop.  To check what version your Nightscout site is running, go to your Nightscout site and pull open the site settings by clicking on the three horizontal lines at the top right of the screen.  The version number is at the bottom.\n\n\nNightscout has a tool to help you update your Nightscout site and you can find the \ndirections using to the update tool here\n.\n\n\nSimply put, the \nUpdate tool\n will look at your GitHub repository and check if your Nightscout code is old and needs updating.  You will have to be logged into your GitHub account in order for the tool to work, so do that before starting this process.\n\n\n\n\n\n\n\n\n\n\nYou'll click on the green \nContinue updating at GitHub\n button, read the directions that will appear as a pop-up and then finish the update process. \n\n\nClick the big green \nCreate pull request\n button. \n\n\n\n\n\n\nFor most people, another screen will appear like shown in the screenshots below with a green \nAble to merge\n message. Fill in a title and click the button to create the pull request, and then you can \nMerge pull request\n, and finally \nConfirm merge\n.\n\n\n\n\n\n\nHowever, for some of you may encounter a red error message \nx Can't automatically merge\n message. If you have that message, you may want to post in FB for help on resolving that error message before proceeding any further.\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n \n\n\n\n\nYour cgm-remote-monitor repository is now up-to-date.  Nice work, and almost done.\n\n\nIf you don\u2019t have your Heroku set-up to automatically update when your repository is updated, you will have to go into your Heroku \nDeploy\n section and manually deploy your branch now that your repository has been updated.  Make sure you are connected to your GitHub cgm-remote-monitor repository.",
            "title": "Retrofit Existing NS"
        },
        {
            "location": "/nightscout/update_user/#adding-loop-to-existing-ns",
            "text": "Many people may already have an existing Nightscout site setup from before adding Loop to their management strategies. In order to make the most of your Looping setup, you will need to modify your existing Nightscout site a bit specifically for Loop. The process is pretty easy and should not take long.",
            "title": "Adding Loop to Existing NS"
        },
        {
            "location": "/nightscout/update_user/#new-loopers-variables",
            "text": "The modifications for retrofitting an existing NS site for new Loop users will require you to make some edits to your Heroku site.  There are five steps:   Login to Heroku, Open Settings Tab  Edit/Add Config Vars  Open Nightscout Site  Turn on Plugins  Update Profile Settings",
            "title": "New Loopers Variables"
        },
        {
            "location": "/nightscout/update_user/#step-1-login-to-heroku-settings-tab",
            "text": "Login to your Heroku account , select the  Settings  tab near the top of the screen on your Heroku app.",
            "title": "Step 1: Login to Heroku, Settings Tab"
        },
        {
            "location": "/nightscout/update_user/#step-2-editadd-config-vars",
            "text": "Click on  Reveal Config Vars .  Scroll down the bottom of the Config Vars lines until you find the last blank one.  You are going to add several additional lines of config vars for Loop use; the DEVICESTATUS_ADVANCED and ENABLE lines are required, the others just make Nightscout more useful when Looping.              ENABLE  bridge loop pump iob cob basal careportal sage cage basal  (Note: If you are an existing NS user, you likely already have an ENABLE line in this section of Heroku. Don't add a new one. Simply find the existing ENABLE line, click on the little pencil icon to the right of it, and add the words shown on the ENABLE line below to the existing words already on the enable line.  Avoid duplicates. The remainder of the lines are likely going to be brand new additions to your Heroku settings.)    DEVICESTATUS_ADVANCED  true    PUMP_FIELDS  battery reservoir clock status    PUMP_RETRO_FIELDS  battery reservoir clock status    SHOW_FORECAST  loop    SHOW_PLUGINS  loop pump cob iob sage cage careportal    PUMP_ENABLE_ALERTS  true    PUMP_URGENT_BATT_U  30 (This is the pump battery percentage that will trigger a red, urgent alert in NS.)    PUMP_URGENT_BATT_V  1.25 (This is the pump battery voltage that will trigger a red, urgent alert in NS.)    PUMP_URGENT_RES  10 (This is the reservoir volume that will trigger a red, urgent alert in NS.)    PUMP_URGENT_CLOCK  30    LOOP_ENABLE_ALERTS  true    LOOP_WARN  20 (This is the minutes since Loop last successfully looped, the t1d will have a similar notification at this time through the Loop app.  This will be a yellow alert in NS.)    LOOP_URGENT  60 (Same as the alert above, but will be red in color and have a shorter snooze option.)    BASAL_RENDER  default",
            "title": "Step 2: Edit/Add Config Vars"
        },
        {
            "location": "/nightscout/update_user/#step-3-open-your-ns-site",
            "text": "Click on  Open App  in the top right corner of your Heroku site.",
            "title": "Step 3: Open Your NS Site"
        },
        {
            "location": "/nightscout/update_user/#step-4-turn-on-plugins",
            "text": "Click on the settings (those three horizontal lines in the upper right corner).  Now check that your basal render is selected to either default or icicle (personal preference for how the temp basals show as blue lines in NS site), check the boxes that you\u2019d like display pills in the SHOW PLUGINS (usually all of them), and then click save. If you have not authenticated your site previously, you may be prompted to provide your API Secret prior to Nightscout saving your changes.",
            "title": "Step 4: Turn on Plugins"
        },
        {
            "location": "/nightscout/update_user/#step-5-update-profile-settings",
            "text": "Double-check that your NS Profile settings are current and that you have a basal profile entered, if you want to see the temp basals that Loop is setting. The values in your Nightscout Profile settings will not impact or affect your Loop, but it is just nice to have them match up in the event you are looking at your data with an endocrinologist or retrospectively looking at data.",
            "title": "Step 5: Update Profile Settings"
        },
        {
            "location": "/nightscout/update_user/#nightscout-version-update",
            "text": "If you are new to Loop and haven\u2019t updated your NS site since before December 1, 2016, you will want to update your NS site. You can run either the \"master\" or \"dev\" branches of cgm-remote-monitor with Loop.  To check what version your Nightscout site is running, go to your Nightscout site and pull open the site settings by clicking on the three horizontal lines at the top right of the screen.  The version number is at the bottom.  Nightscout has a tool to help you update your Nightscout site and you can find the  directions using to the update tool here .  Simply put, the  Update tool  will look at your GitHub repository and check if your Nightscout code is old and needs updating.  You will have to be logged into your GitHub account in order for the tool to work, so do that before starting this process.     \nYou'll click on the green  Continue updating at GitHub  button, read the directions that will appear as a pop-up and then finish the update process.   Click the big green  Create pull request  button.     For most people, another screen will appear like shown in the screenshots below with a green  Able to merge  message. Fill in a title and click the button to create the pull request, and then you can  Merge pull request , and finally  Confirm merge .    However, for some of you may encounter a red error message  x Can't automatically merge  message. If you have that message, you may want to post in FB for help on resolving that error message before proceeding any further.                       Your cgm-remote-monitor repository is now up-to-date.  Nice work, and almost done.  If you don\u2019t have your Heroku set-up to automatically update when your repository is updated, you will have to go into your Heroku  Deploy  section and manually deploy your branch now that your repository has been updated.  Make sure you are connected to your GitHub cgm-remote-monitor repository.",
            "title": "Nightscout Version Update"
        },
        {
            "location": "/nightscout/troublehoot/",
            "text": "Setup Troubleshooting\n\u2301\n\n\nIf you have just tried to set up your Nightscout site and have problems with seeing all your data, please check out the information below.\n\n\nDexcom data not showing\n\u2301\n\n\nIf you are using a Dexcom system, and your data is not appearing in Nightscout, there are only a limited number of reasons for that. You should check your (1) Heroku settings and (2) Dexcom Share.\n\n\nNOTE: The #1 reason why BGs aren't showing is that you have mismatched password and user names in Heroku settings and Dexcom. Please see blue box below for that error.\n\n\nHeroku Settings\n\u2301\n\n\nLogin to your Heroku account and from within Heroku settings, click on the  \nReveal Config Vars\n\n\n\n\n\n\n\n\n\nNow from the \nConfig Vars\n area, check the following (see screenshot below for reference):\n\n\n\n\nYou must use the same \nBRIDGE_PASSWORD\n or \nBRIDGE_USER_NAME\n that your Dexcom mobile app is using.\n\n\nYou must have \nbridge\n and \ncareportal\n on the \nENABLE\n line (you can have other values there...but don't forget these two).\n\n\nIf you are outside the USA, you must add \nBRIDGE_SERVER\n set to \nEU\n in Heroku settings.\n\n\nYour \ncareportal\n must be one word in the \nENABLE\n line, sometimes autocorrect makes it two words.\n\n\nIf using \nmmol\n, make sure you have spelled that value correctly in the \nDISPLAY_UNITS\n.\n\n\n\n\n\n\n\n\n\n\n\nOne thing that can happen if you have an incorrect Dexcom login/password in Loop's CGM Share account settings and/or in your Nightscout BRIDGE settings is that Dexcom will lock your account...and you won't see CGM data in Nightscout. If you notice your CGM readings disappeared, but everything else is flowing...check your Heroku logs that are viewable by selecting \"View Logs\" from the drop-down menu underneath the \"More\" option. \n\n\n\n\n\n\n\n\n\nDo your logs have \"SSO authentication errors\" like in the red box highlighted above? If you do, then:\n\n\n\n\n\n\nDelete your share account entry from your Loop's CGM account settings...like you should have NO ENTRY in your share account settings WITHIN LOOP CGM SETTINGS.\n\n\n\n\n\n\nDelete your BRIDGE entries within Heroku settings.  Don't delete the rows, just delete the entries within BRIDGE_PASSWORD and BRIDGE_USER_NAME.\n\n\n\n\n\n\nWait 15 minutes and then follow the directions in the blue box below. It is important to wait the 15 minutes...the reason you can't log in right now is that your Dexcom account has a temporary lock from one of the passwords in step 1 or 2 being incorrect. The temporary lock will expire after 10-15 minutes of giving the account login a break from the incorrect logins. So, definitely wait or else you'll just keep prolonging the issue.\n\n\n\n\n\n\n\n\nAbout your Bridge password and user name\n\n\nThe \nBRIDGE_PASSWORD\n and \nBRIDGE_USER_NAME\n are NOT visible from within your Dexcom mobile app or online account. The values of them are what you entered into your Dexcom mobile app when you VERY FIRST logged into that app however long ago. If you have double-checked everything else that could be incorrect and BGs still aren't showing in Nightscout, then you likely have those Bridge values incorrect. To fix that, delete your Dexcom app (don't stop the session before deleting the app...just keep it going). Download the app again from the iPhone's App Store and login to the freshly-downloaded Dexcom app. \nTake note\n that deleting the app will not stop your session, your session will pick right back up once the transmitter pairs again. The \nBRIDGE_USER_NAME\n is not an email address. Use that exact same login now in your Heroku settings. You can leave your Loop's Share account info blank...you just need the transmitter ID going forward.\n\n\n\n\nDexcom Share\n\u2301\n\n\nMake sure you have Dexcom Share turned ON in your Dexcom app. In the Dexcom app's main screen, find the triangle made of dots. If the dots are grey, you do not have Share turned on. Tap the triangle, and follow the directions to add a follower (yourself if you don't have someone else you'd like to invite) and turn on Share.\n\n\n\n\n\n\n\n\n\nLoop data not showing\n\u2301\n\n\nIf your BG data is showing, but Loop data is not (like Loop pill is empty and carbs and boluses are not showing), please delete your Nightscout account in Loop settings area. Enter the information in freshly. Make sure to use \nhttps://\n to start the site URL. Make sure there is no trailing slash at the end of the URL. Make sure you have \nloop\n on the ENABLE line in Heroku settings.",
            "title": "Setup Troubleshooting"
        },
        {
            "location": "/nightscout/troublehoot/#setup-troubleshooting",
            "text": "If you have just tried to set up your Nightscout site and have problems with seeing all your data, please check out the information below.",
            "title": "Setup Troubleshooting"
        },
        {
            "location": "/nightscout/troublehoot/#dexcom-data-not-showing",
            "text": "If you are using a Dexcom system, and your data is not appearing in Nightscout, there are only a limited number of reasons for that. You should check your (1) Heroku settings and (2) Dexcom Share.  NOTE: The #1 reason why BGs aren't showing is that you have mismatched password and user names in Heroku settings and Dexcom. Please see blue box below for that error.",
            "title": "Dexcom data not showing"
        },
        {
            "location": "/nightscout/troublehoot/#heroku-settings",
            "text": "Login to your Heroku account and from within Heroku settings, click on the   Reveal Config Vars     Now from the  Config Vars  area, check the following (see screenshot below for reference):   You must use the same  BRIDGE_PASSWORD  or  BRIDGE_USER_NAME  that your Dexcom mobile app is using.  You must have  bridge  and  careportal  on the  ENABLE  line (you can have other values there...but don't forget these two).  If you are outside the USA, you must add  BRIDGE_SERVER  set to  EU  in Heroku settings.  Your  careportal  must be one word in the  ENABLE  line, sometimes autocorrect makes it two words.  If using  mmol , make sure you have spelled that value correctly in the  DISPLAY_UNITS .      One thing that can happen if you have an incorrect Dexcom login/password in Loop's CGM Share account settings and/or in your Nightscout BRIDGE settings is that Dexcom will lock your account...and you won't see CGM data in Nightscout. If you notice your CGM readings disappeared, but everything else is flowing...check your Heroku logs that are viewable by selecting \"View Logs\" from the drop-down menu underneath the \"More\" option.      Do your logs have \"SSO authentication errors\" like in the red box highlighted above? If you do, then:    Delete your share account entry from your Loop's CGM account settings...like you should have NO ENTRY in your share account settings WITHIN LOOP CGM SETTINGS.    Delete your BRIDGE entries within Heroku settings.  Don't delete the rows, just delete the entries within BRIDGE_PASSWORD and BRIDGE_USER_NAME.    Wait 15 minutes and then follow the directions in the blue box below. It is important to wait the 15 minutes...the reason you can't log in right now is that your Dexcom account has a temporary lock from one of the passwords in step 1 or 2 being incorrect. The temporary lock will expire after 10-15 minutes of giving the account login a break from the incorrect logins. So, definitely wait or else you'll just keep prolonging the issue.     About your Bridge password and user name  The  BRIDGE_PASSWORD  and  BRIDGE_USER_NAME  are NOT visible from within your Dexcom mobile app or online account. The values of them are what you entered into your Dexcom mobile app when you VERY FIRST logged into that app however long ago. If you have double-checked everything else that could be incorrect and BGs still aren't showing in Nightscout, then you likely have those Bridge values incorrect. To fix that, delete your Dexcom app (don't stop the session before deleting the app...just keep it going). Download the app again from the iPhone's App Store and login to the freshly-downloaded Dexcom app.  Take note  that deleting the app will not stop your session, your session will pick right back up once the transmitter pairs again. The  BRIDGE_USER_NAME  is not an email address. Use that exact same login now in your Heroku settings. You can leave your Loop's Share account info blank...you just need the transmitter ID going forward.",
            "title": "Heroku Settings"
        },
        {
            "location": "/nightscout/troublehoot/#dexcom-share",
            "text": "Make sure you have Dexcom Share turned ON in your Dexcom app. In the Dexcom app's main screen, find the triangle made of dots. If the dots are grey, you do not have Share turned on. Tap the triangle, and follow the directions to add a follower (yourself if you don't have someone else you'd like to invite) and turn on Share.",
            "title": "Dexcom Share"
        },
        {
            "location": "/nightscout/troublehoot/#loop-data-not-showing",
            "text": "If your BG data is showing, but Loop data is not (like Loop pill is empty and carbs and boluses are not showing), please delete your Nightscout account in Loop settings area. Enter the information in freshly. Make sure to use  https://  to start the site URL. Make sure there is no trailing slash at the end of the URL. Make sure you have  loop  on the ENABLE line in Heroku settings.",
            "title": "Loop data not showing"
        },
        {
            "location": "/nightscout/mlab_cleanup/",
            "text": "Nightscout Issues\n\u2301\n\n\nThe free Nightscout we use also depends on a free database from mLab.  The free database only has so much room...500 MB to be specific.  After a period of time (it will vary, but usually on the order of months), your mLab database could reach its free limits.  When that happens, your NS site may stop showing data properly.  For example, you may notice your Share Bridge will not pull data and your site will be \u201cstale\u201d.\n\n\nThe good news?  Loop can still run just fine until you repair your mLab database.  The bad news?  You just won\u2019t be able to remotely monitor Loop through NS until you clear up some storage space in mLab.\n\n\n\n\nThese steps \nWILL BE NEEDED BY EVERYONE AT SOME POINT IN TIME\n...so please don't ignore these troubleshooting steps. If you see anything suddenly strange about your NS site after it had been working fine, start with these steps below. \n\n\n\n\nmLab Cleanup\n\u2301\n\n\nThere are two steps to getting your Nightscout site running again. You will need to do both steps.  The first step clears out some space in your database.  The second step consolidates the remaining data into a more compact space, and therefore makes the data take up less room overall in your database. You need to do both steps to help keep your NS humming along.\n\n\nIf you'd like a video demonstration of the steps needed to do this...here ya go. The video uses just a slightly different way to do Step 1...either way is totally fine. Click the image or click this \nNightscout Cleanup link\n...you'll end up at the same place.\n\n\n\n\n\n\n\n\n\nStep 1: Delete Data\n\u2301\n\n\nGo to your Nightscout site's settings (the three horizontal bars in the upper right of your Nightscout site) and open your Admin Tools for the site.  Click on the buttons to \"Delete all documents\" in your Clean Mongo status database section of the Admin Tools.  For good measure, also click on the buttons for removing future items as well.  \n\n\n\n\n\n\n\n\n\nStep 2: Repair Database\n\u2301\n\n\nNow that you cleared out some database space, we can now make the database more efficient by \"repairing\" the database.\n\n\nTo begin the repair process, click on the mlab link in your Heroku site control panel.\n\n\n\n\n\n\n\n\n\nThen click on the \nTools\n tab in the screen that opens.  Click on the \ncommands\n button and then select the \nrepairDatabase\n from the dropdown menu of available commands.  At the bottom of the screen, select the \nRun Command\n button. \n\n\n\n\n\n\n\n\n\nAfter a short time, you should get a return message of \"ok\" at the bottom of the command menu box.  If you failed to clear out your Mongo status database before running this command, you will likely not get a successful repair and instead your pointer wheel will just keep spinning.  Make sure you first clean out the database section as described above with your Nightscout Admin Tools.\n\n\nYou can verify that your database housekeeping was successful by returning to your NS site and waiting for the next Loop upload.  You should see all your information back in with the next Loop run.",
            "title": "NS Stopped Working"
        },
        {
            "location": "/nightscout/mlab_cleanup/#nightscout-issues",
            "text": "The free Nightscout we use also depends on a free database from mLab.  The free database only has so much room...500 MB to be specific.  After a period of time (it will vary, but usually on the order of months), your mLab database could reach its free limits.  When that happens, your NS site may stop showing data properly.  For example, you may notice your Share Bridge will not pull data and your site will be \u201cstale\u201d.  The good news?  Loop can still run just fine until you repair your mLab database.  The bad news?  You just won\u2019t be able to remotely monitor Loop through NS until you clear up some storage space in mLab.   These steps  WILL BE NEEDED BY EVERYONE AT SOME POINT IN TIME ...so please don't ignore these troubleshooting steps. If you see anything suddenly strange about your NS site after it had been working fine, start with these steps below.",
            "title": "Nightscout Issues"
        },
        {
            "location": "/nightscout/mlab_cleanup/#mlab-cleanup",
            "text": "There are two steps to getting your Nightscout site running again. You will need to do both steps.  The first step clears out some space in your database.  The second step consolidates the remaining data into a more compact space, and therefore makes the data take up less room overall in your database. You need to do both steps to help keep your NS humming along.  If you'd like a video demonstration of the steps needed to do this...here ya go. The video uses just a slightly different way to do Step 1...either way is totally fine. Click the image or click this  Nightscout Cleanup link ...you'll end up at the same place.",
            "title": "mLab Cleanup"
        },
        {
            "location": "/nightscout/mlab_cleanup/#step-1-delete-data",
            "text": "Go to your Nightscout site's settings (the three horizontal bars in the upper right of your Nightscout site) and open your Admin Tools for the site.  Click on the buttons to \"Delete all documents\" in your Clean Mongo status database section of the Admin Tools.  For good measure, also click on the buttons for removing future items as well.",
            "title": "Step 1: Delete Data"
        },
        {
            "location": "/nightscout/mlab_cleanup/#step-2-repair-database",
            "text": "Now that you cleared out some database space, we can now make the database more efficient by \"repairing\" the database.  To begin the repair process, click on the mlab link in your Heroku site control panel.     Then click on the  Tools  tab in the screen that opens.  Click on the  commands  button and then select the  repairDatabase  from the dropdown menu of available commands.  At the bottom of the screen, select the  Run Command  button.      After a short time, you should get a return message of \"ok\" at the bottom of the command menu box.  If you failed to clear out your Mongo status database before running this command, you will likely not get a successful repair and instead your pointer wheel will just keep spinning.  Make sure you first clean out the database section as described above with your Nightscout Admin Tools.  You can verify that your database housekeeping was successful by returning to your NS site and waiting for the next Loop upload.  You should see all your information back in with the next Loop run.",
            "title": "Step 2: Repair Database"
        },
        {
            "location": "/nightscout/remote-overrides/",
            "text": "Setup Remote Overrides\n\u2301\n\n\nYou can now use your Nightscout site to remotely set and cancel your override presets in your Loop app. What?! Yes, really...you can set/cancel an override remotely for your child's Loop. (This feature does require that you built your Loop app using a paid Apple developer account, just FYI.)\n\n\n\n\nWhat you will need to do..\n\n\n\n\n\n\nUpdate your Loop app (if you haven't done that since October 13, 2019 when remote overrides first became available)\n\n\n\n\n\n\nCreate a Key for an Apple Push Notifications service (APNs)\n\n\n\n\n\n\nUpdate your Nightscout site and add some \"config vars\" lines in your Heroku settings.\n\n\n\n\n\n\n\n\nStep 1: Updating Loop app and iPhone settings\n\u2301\n\n\nRemote overrides were in dev branch of Loop beginning October 13, 2019 and in master branch as of December 31, 2019. If you built one of those branches before those dates, you'll need to update your Loop app to be able to access remote overrides.  Be sure to review all the steps for updating your Loop app \nhere\n.\n\n\n\n\niPhone settings specific for remote overrides\n\n\nFor remote overrides to successfully deploy on a Looper's iPhone, they will need to have two settings on the iPhone enabled. First, Loop's slider in iPhone Settings, Notifications needs to be turned on.  Without notifications, the person trying to set a remote override will see the message about \"no deviceToken\" and no remote override will actually enact. Second, the Looper's iphone needs the slide on in iPhone Settings, General, Background App Refresh. If this is not enabled, the remote overrides will not enact if the Loop app is not actively open on the phone's main screen.\n\n\n\n\nStep 2: Apple Push Notifications\n\u2301\n\n\nThe next part of this will help your Loop app give permissions to your Nightscout site to remotely interact with it.\n\n1. Login to your \nApple developer account\n with the Apple ID associated with your developer team that you used to sign your Loop app.\n\n2. Click on \"Certificates, Indentifiers & Profiles\" and then, on the next page, click on \"Keys\" (located on the left-hand column). Click on the blue \"Create a new key\" \nOR\n the \"+\" icon to add a new key. \n\n\n\n\n\n\n\n\n\n\n3. In the form that appears, click the checkbox for enabling \"Apple Push Notifications service (APNs)\" and enter a name for the key such as \"Nightscout\". Then click the \"Continue\" button in the upper right of the screen.\n\n\n\n\n\n\n\n\n\n\n4. In the screen that follows, click the blue \"Register\" button.\n\n\n\n\n\n\n\n\n\n\n5. In the screen that follows, click the blue \"Download\" button. This step will download a file with a name that starts with \"AuthKey\" and ends with \".p8\".\n\n\n\n\n\n\n\n\n\n\n6. Find your AuthKey download in your downloads folder. Double-click to open it and you will be presented a message asking how you'd like to open it. Click on \"Choose Application...\" and then select \"TextEdit\" as your application to open it with.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n7. When the file opens, it will look similar to the screenshot below. In a few minutes, after we do a few other steps first, we will need to highlight \nALL OF THE CONTENTS\n of that file and copy it because we will be pasting it in Heroku. Yes, allllll of the contents. So, easiest way is to click inside that file and then press \ncommand-a\n to highlight all the text and then \ncommand-c\n to copy it all to the clipboard. You don't have to do it right now...just keep that window open in the background for now until we need it a little further down. Then we will copy all that text.\n\n\n\n\n\n\n\n\n\n\n\nStep 3: Update Nightscout site\n\u2301\n\n\nYou'll need to update your Nightscout site to use the latest version of cgm-remote-monitor. It is called Ketchup and the version number is 13.0.1. You can check your version number by looking at the bottom of your NS site's settings, near where the authentication button is located. The easiest way to do to update your Nightscout site is to follow the steps in the video below.\n\n\n\n\nUse this video for an easy process to update your Nightscout site:\n\n\n\nEasy Nightscout Update Video\n\n\nA quick note about the video instructions:\n\n \nIf you don't see any branches to select to deploy and are missing the deploy button when you get to that step...you need to do one easy step. Select/click the \"GitHub\" icon from the middle of your Heroku screen. Then enter your GitHub account name to connect to that account. Once connected to your account, enter \ncgm-remote-monitor\n as the repo you'd like to use to connect with specifically. That will fix the issue and you'll then see the deploy buttons like in the video.\n\n\n\n\nOnce you have your Nightscout deployment updated to the latest master branch of cgm-remote-monitor, now we need to add a couple new variables.\n\n\nGo to the \nSettings\n tab near the top of the screen on your Heroku app and then click on \nReveal Config Vars\n.  \n\n\n\n\n\n\n\n\n\n\nScroll down the bottom of the Config Vars lines until you find the last blank one.  You are going to add three new rows of config vars for remote overrides as shown below:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nKEY\n\n\nVALUE\n\n\n\n\n\n\n\n\n\n\nLOOP_APNS_KEY\n\n\nenter ENTIRE contents of the downloaded .p8 file including the BEGIN and END lines. Here's where you can use the \ncommand-a\n and \ncommand-c\n to hightlight and copy all the text in that file so you can paste it into Heroku here for this new variable you are creating.\n\n\n\n\n\n \n\n\n\n\n\n\nLOOP_APNS_KEY_ID\n\n\nstring of characters on the .p8 download file immediately following the underscore (  _  ) and not including the file extension ( .p8 ), or you can get it from your saved key in your developer account as shown next step, too\n\n\n\n\n\n \n\n\n\n\n\n\n\n\nLOOP_DEVELOPER_TEAM_ID\n\n\nget this value from Loop app signing or in your developer account's top right corner under your name\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\nWhen executed properly, you should have something that looks like this for your three new variables that you added:\n\n\n\n\n\n\n\n\n\n\n\nStep 4: FAQs on Remote Overrides\n\u2301\n\n\nDon't forget to read Loopdocs pages about how regular overrides work. For remote overrides in particular:\n\n\n\n\nCan I set different override in Nighscout than I have programmed into Loop app?\n Answer: No. You will only be able to enact override presets already programmed into the Loop app.\n\n\nIf I didn't start the override in Nightscout (it was started in Loop itself), can I still use Nightscout to cancel it?\n Answer: Yes. You can cancel a Loop-set override with a Nightscout-set cancel \"temporary override\" command in careportal.\n\n\n\"Can I override a Loop-set override with a Nightscout-set override?\"\n Answer: Yes. \n\n\nIf I have multiple Nightscout sites because I have multiple kiddos with T1D looping, do I need multiple APNs Keys?\n Answer: No. If you have multiple kids looping, you can use the one APNs key in each of their Nightscout sites. \n\n\nHow can I tell if it worked?\n Answer: You should see your override pill in Nightscout, with the NEXT Loop cycle, reflecting that the desired override action took place. If you are near the Loop app, you should see the new override within less than 30 seconds or so.\n\n\n\n\nCan I set see on Nightscout when a temporary override has been set using the looper\u2019s phone?\n Yes. There will be a grey bar with the name of the override noted and the Loop Pill will display the targets and duration. Remember, there is a KNOWN issue with the grey bars, so use the pill as your best guide. \n\n\n\n\n\n\nCan a looper cancel a remote override\n? Yes. They can tap the heart icon in Loop so that it is no longer highlighted. This turns off the override, regardless of where it was initiated. \n\n\n\n\n\n\nI set a remote override in Nightscout but the looper tapped the heart symbol in the Loop app, so the override turned off. Will the override get reinstated next time Loop completes with internet access?\n No. The APN is only sent once. You can set the remote override again if need be.\n\n\n\n\n\n\nCan I schedule a remote override ahead of time using Nightscout?\n No. When you set a remote override in Nightscout, it will begin immediately and last for whatever duration is programmed for that override in the Loop app. You can set an override for ahead of time using the Looping App only.\n\n\n\n\n\n\nStep 5: Using Remote Overrides\n\u2301\n\n\nThere are three ways you can trigger your override presets remotely; careportal, Shortcuts, and IFTTT.\n\n\nCareportal\n\u2301\n\n\nTo use remote overrides, I'm assuming you've setup your Nightscout site according to the directions \nhere\n in Loopdocs. Especially the part about your ENABLE line including \"override careportal loop\" (in addition to other variables you'd be interested in). You'll also need to have your site authenticated so that your careportal is active to send remote overrides. You can authenticate your site by selecting the three horizontal lines in the upper right corner of your Nightscout site and scrolling to the bottom of the settings. There's an \"authenicate\" link at the very bottom. Once authenticated by entering your API Secret, then there will be a \n+\n in the upper right corner of your site. That is your careportal. Tap the careportal \n+\n and then scroll down in the \"event type\" menu to find \"Temporary Override\". Within there, you will find all your Loop override presets already loaded for you.\n\n\n\n\n\n\n\n\n\n\n\nThe Looper will see a banner notification that an override has been set (or canceled, as the case may be).\n\n\n\n\n\n\n\n\n\n\n\nCanceling an override through Nightscout careportal is as simple as selecting the event type \"Temporary Override Cancel\" and submitting. \n\n\nShortcuts\n\u2301\n\n\nIf you want to make your life SUPER AMAZING, check out using the iPhone's Shortcuts app. The Shortcuts app is for making little automations (like mini apps) that can integrate parts of your life. In this case, we've written a couple shortcuts for you that integrate Loop overrides with Nightscout. \n\n\n\n\nImportant note\n\n\nBefore you click that download below...save some trouble. Download the Shortcuts app if you don't have it yet and choose to run any shortcut from the Gallery. It can be the laundry timer...I don't care, just pick one and run it.  THEN go to download the shortcut of your choice below. The shortcuts that aren't run through the Gallery option are called \"untrusted\". And you need a slider in your iPhone to trust the \"untrusted\" shortcuts you would be downloading here. But...in lovely iOS glitch...that slider doesn't appear unless you've run a trusted shortcut first. So, run one now. Then you'll have the slider in iPhone Settings, Shortcuts app to turn \"Allow Untrusted Shortcuts\" on when you will see a message \"This shortcut cannot be opened because your Shortcuts security system settings don't allow untrusted shortcuts.\"\n\n\n\n\nClick these links on your iphone and you'll be prompted to download the premade shortcuts (assuming you open the links in Safari browser in iPhone):\n\n\nComprehensive Loop Shortcut\n\n \nincludes Set Remote Override, Cancel Override, Loop Troubleshooting Tips, Quick Text options, Manual BG entry, Bookmarks to websites, etc.\n\n\nAnd if you want to save one click to get to these one functions more directly: these shortcuts are simplified to offer only one function:\n\n\nSet Remote Override only shortcut\n\n\nCancel Override only shortcut\n\n\nA couple notes about these shortcuts:\n\n\n\n\nYou will need iOS 13 at a minimum on the phone you'd like to trigger these shortcuts from. Looper's phone can still be lower than iOS 13, but your phone as the shortcut user would need iOS 13.\n\n\nYou need to open those links in the Safari browser on your iPhone. When you do that click the button to get the shortcut. Then wait a bit, and the shortcut's inner guts will be there...scroll ALL the way down to the bottom to click the button to save the untrusted shortcut.\n\n\nWhen you enter your Nightscout URL in the \"URL\" field of the Loop shortcut setup, make sure you don't include a trailing \"/\" or the API calls to Heroku will error out. \n\n\nWhen a remote override is set properly, you'll see an \"ok\" message displayed. If there is an error, you'll see an error message. Most errors will be that you have an API secret wrong (make sure there isn't a space at the end of you API Secret that you don't see) or you failed to do the steps to setup NS and update your Loop app as described in steps 1-3 above.\n\n\nYou can absolutely customize these bits and pieces within the shortcut. Change the text messages, change the links...totally up to you.\n\n\n\n\nIFTTT\n\u2301\n\n\nIf you want to walk uphill both ways in the snow carrying bags of uneven groceries, you can also set overrides remotely by \nsetting up IFTTT\n, too.\n\n\nStep 6: Known Issues\n\u2301\n\n\nJust a brief mention so you are aware:\n\n\n\n\nThe override pill will display information about what override is currently active in the Looper's phone. BUT, there can be a slight delay as that information is only transmitted every 5 minutes at best (it is tied to Loop runs and Nightscout upload events in Loop). So, wait 5 minutes to see that the information has gone through a refresh cycle before assuming the override message failed to enact.\n\n\nWhen you add a new override preset in Loop, that preset has to be uploaded to Nightscout before it will be available as a remote override. To trigger that upload, you can simply enact that new override for a few seconds and turn it off again. that will get the Nightscout upload going.\n\n\n\n\nStep 7: Common Errors\n\u2301\n\n\nOnce you've set up remote overrides, you may encounter errors when trying to run them via Nightscout or iOS Shortcuts.  Below are the most common and the typical solutions.\n\n\n\n\nError: Loop notification failed: Could not find deviceToken in loopSettings\n You might see this in either Nightscout or Shortcuts.  The error is most commonly caused by 3 issues: incorrect version of Loop, Loop is not pointing to the right Nightscout instance, or you haven't yet run an override locally (with the Loop app) before trying to run one remotely.  \nSolution:\n check you have the latest version of the Dev branch installed, confirm the Loop app is pointing to the right Nightscout site (and there are not extra spaces or a slash (/) at the end, and always run an override for a few seconds in the Loop app before you try to run one remotely.\n\n\nError: cannot POST/api/v2/notifications/loop\n You might see this in iOS Shortcuts.  This means Nightscout is not updated correctly and you are running a version of Nightscout that doesn't yet support remote overrides.  \nSolution:\n Follow the steps above again on how to update to the version of Nightscout that supports remote overrides.\n\n\nError: {\u201cstatus\u201d:401,\u201dmessage\u201d:\u201dUnauthorized\u201d,\u201ddescription\u201d:Invalid\\/Missing\u201d}\n You might see this in iOS Shortcuts.  This is caused by having the incorrect API Secret in the Shortcut.  \nSolution:\n Double check the API Secret is correct and that there are no spaces at the end.\n\n\nError: APNs delivery failed: InvalidProviderToken\n You might see this in either Nightscout or Shortcuts.  This is caused because your LOOP_APNS_KEY_ID and LOOP_DEVELOPER_TEAM_ID are swapped in Heroku.  \nSolution:\n Double check what's listed in your Apple Developer Account and compare to the config variables in Heroku. Your Team_ID is next to your name in the top right corner.  The other code is your Key_ID. Get the IDs in the correct location in Heroku to resolve the error.",
            "title": "Remote Overrides"
        },
        {
            "location": "/nightscout/remote-overrides/#setup-remote-overrides",
            "text": "You can now use your Nightscout site to remotely set and cancel your override presets in your Loop app. What?! Yes, really...you can set/cancel an override remotely for your child's Loop. (This feature does require that you built your Loop app using a paid Apple developer account, just FYI.)   What you will need to do..    Update your Loop app (if you haven't done that since October 13, 2019 when remote overrides first became available)    Create a Key for an Apple Push Notifications service (APNs)    Update your Nightscout site and add some \"config vars\" lines in your Heroku settings.",
            "title": "Setup Remote Overrides"
        },
        {
            "location": "/nightscout/remote-overrides/#step-1-updating-loop-app-and-iphone-settings",
            "text": "Remote overrides were in dev branch of Loop beginning October 13, 2019 and in master branch as of December 31, 2019. If you built one of those branches before those dates, you'll need to update your Loop app to be able to access remote overrides.  Be sure to review all the steps for updating your Loop app  here .   iPhone settings specific for remote overrides  For remote overrides to successfully deploy on a Looper's iPhone, they will need to have two settings on the iPhone enabled. First, Loop's slider in iPhone Settings, Notifications needs to be turned on.  Without notifications, the person trying to set a remote override will see the message about \"no deviceToken\" and no remote override will actually enact. Second, the Looper's iphone needs the slide on in iPhone Settings, General, Background App Refresh. If this is not enabled, the remote overrides will not enact if the Loop app is not actively open on the phone's main screen.",
            "title": "Step 1: Updating Loop app and iPhone settings"
        },
        {
            "location": "/nightscout/remote-overrides/#step-2-apple-push-notifications",
            "text": "The next part of this will help your Loop app give permissions to your Nightscout site to remotely interact with it. \n1. Login to your  Apple developer account  with the Apple ID associated with your developer team that you used to sign your Loop app. \n2. Click on \"Certificates, Indentifiers & Profiles\" and then, on the next page, click on \"Keys\" (located on the left-hand column). Click on the blue \"Create a new key\"  OR  the \"+\" icon to add a new key.      \n3. In the form that appears, click the checkbox for enabling \"Apple Push Notifications service (APNs)\" and enter a name for the key such as \"Nightscout\". Then click the \"Continue\" button in the upper right of the screen.     \n4. In the screen that follows, click the blue \"Register\" button.     \n5. In the screen that follows, click the blue \"Download\" button. This step will download a file with a name that starts with \"AuthKey\" and ends with \".p8\".     \n6. Find your AuthKey download in your downloads folder. Double-click to open it and you will be presented a message asking how you'd like to open it. Click on \"Choose Application...\" and then select \"TextEdit\" as your application to open it with.         \n7. When the file opens, it will look similar to the screenshot below. In a few minutes, after we do a few other steps first, we will need to highlight  ALL OF THE CONTENTS  of that file and copy it because we will be pasting it in Heroku. Yes, allllll of the contents. So, easiest way is to click inside that file and then press  command-a  to highlight all the text and then  command-c  to copy it all to the clipboard. You don't have to do it right now...just keep that window open in the background for now until we need it a little further down. Then we will copy all that text.",
            "title": "Step 2: Apple Push Notifications"
        },
        {
            "location": "/nightscout/remote-overrides/#step-3-update-nightscout-site",
            "text": "You'll need to update your Nightscout site to use the latest version of cgm-remote-monitor. It is called Ketchup and the version number is 13.0.1. You can check your version number by looking at the bottom of your NS site's settings, near where the authentication button is located. The easiest way to do to update your Nightscout site is to follow the steps in the video below.   Use this video for an easy process to update your Nightscout site:  Easy Nightscout Update Video  A quick note about the video instructions:  \nIf you don't see any branches to select to deploy and are missing the deploy button when you get to that step...you need to do one easy step. Select/click the \"GitHub\" icon from the middle of your Heroku screen. Then enter your GitHub account name to connect to that account. Once connected to your account, enter  cgm-remote-monitor  as the repo you'd like to use to connect with specifically. That will fix the issue and you'll then see the deploy buttons like in the video.   Once you have your Nightscout deployment updated to the latest master branch of cgm-remote-monitor, now we need to add a couple new variables.  Go to the  Settings  tab near the top of the screen on your Heroku app and then click on  Reveal Config Vars .       \nScroll down the bottom of the Config Vars lines until you find the last blank one.  You are going to add three new rows of config vars for remote overrides as shown below:        KEY  VALUE      LOOP_APNS_KEY  enter ENTIRE contents of the downloaded .p8 file including the BEGIN and END lines. Here's where you can use the  command-a  and  command-c  to hightlight and copy all the text in that file so you can paste it into Heroku here for this new variable you are creating.        LOOP_APNS_KEY_ID  string of characters on the .p8 download file immediately following the underscore (  _  ) and not including the file extension ( .p8 ), or you can get it from your saved key in your developer account as shown next step, too         LOOP_DEVELOPER_TEAM_ID  get this value from Loop app signing or in your developer account's top right corner under your name          When executed properly, you should have something that looks like this for your three new variables that you added:",
            "title": "Step 3: Update Nightscout site"
        },
        {
            "location": "/nightscout/remote-overrides/#step-4-faqs-on-remote-overrides",
            "text": "Don't forget to read Loopdocs pages about how regular overrides work. For remote overrides in particular:   Can I set different override in Nighscout than I have programmed into Loop app?  Answer: No. You will only be able to enact override presets already programmed into the Loop app.  If I didn't start the override in Nightscout (it was started in Loop itself), can I still use Nightscout to cancel it?  Answer: Yes. You can cancel a Loop-set override with a Nightscout-set cancel \"temporary override\" command in careportal.  \"Can I override a Loop-set override with a Nightscout-set override?\"  Answer: Yes.   If I have multiple Nightscout sites because I have multiple kiddos with T1D looping, do I need multiple APNs Keys?  Answer: No. If you have multiple kids looping, you can use the one APNs key in each of their Nightscout sites.   How can I tell if it worked?  Answer: You should see your override pill in Nightscout, with the NEXT Loop cycle, reflecting that the desired override action took place. If you are near the Loop app, you should see the new override within less than 30 seconds or so.   Can I set see on Nightscout when a temporary override has been set using the looper\u2019s phone?  Yes. There will be a grey bar with the name of the override noted and the Loop Pill will display the targets and duration. Remember, there is a KNOWN issue with the grey bars, so use the pill as your best guide.     Can a looper cancel a remote override ? Yes. They can tap the heart icon in Loop so that it is no longer highlighted. This turns off the override, regardless of where it was initiated.     I set a remote override in Nightscout but the looper tapped the heart symbol in the Loop app, so the override turned off. Will the override get reinstated next time Loop completes with internet access?  No. The APN is only sent once. You can set the remote override again if need be.    Can I schedule a remote override ahead of time using Nightscout?  No. When you set a remote override in Nightscout, it will begin immediately and last for whatever duration is programmed for that override in the Loop app. You can set an override for ahead of time using the Looping App only.",
            "title": "Step 4: FAQs on Remote Overrides"
        },
        {
            "location": "/nightscout/remote-overrides/#step-5-using-remote-overrides",
            "text": "There are three ways you can trigger your override presets remotely; careportal, Shortcuts, and IFTTT.",
            "title": "Step 5: Using Remote Overrides"
        },
        {
            "location": "/nightscout/remote-overrides/#careportal",
            "text": "To use remote overrides, I'm assuming you've setup your Nightscout site according to the directions  here  in Loopdocs. Especially the part about your ENABLE line including \"override careportal loop\" (in addition to other variables you'd be interested in). You'll also need to have your site authenticated so that your careportal is active to send remote overrides. You can authenticate your site by selecting the three horizontal lines in the upper right corner of your Nightscout site and scrolling to the bottom of the settings. There's an \"authenicate\" link at the very bottom. Once authenticated by entering your API Secret, then there will be a  +  in the upper right corner of your site. That is your careportal. Tap the careportal  +  and then scroll down in the \"event type\" menu to find \"Temporary Override\". Within there, you will find all your Loop override presets already loaded for you.      The Looper will see a banner notification that an override has been set (or canceled, as the case may be).      Canceling an override through Nightscout careportal is as simple as selecting the event type \"Temporary Override Cancel\" and submitting.",
            "title": "Careportal"
        },
        {
            "location": "/nightscout/remote-overrides/#shortcuts",
            "text": "If you want to make your life SUPER AMAZING, check out using the iPhone's Shortcuts app. The Shortcuts app is for making little automations (like mini apps) that can integrate parts of your life. In this case, we've written a couple shortcuts for you that integrate Loop overrides with Nightscout.    Important note  Before you click that download below...save some trouble. Download the Shortcuts app if you don't have it yet and choose to run any shortcut from the Gallery. It can be the laundry timer...I don't care, just pick one and run it.  THEN go to download the shortcut of your choice below. The shortcuts that aren't run through the Gallery option are called \"untrusted\". And you need a slider in your iPhone to trust the \"untrusted\" shortcuts you would be downloading here. But...in lovely iOS glitch...that slider doesn't appear unless you've run a trusted shortcut first. So, run one now. Then you'll have the slider in iPhone Settings, Shortcuts app to turn \"Allow Untrusted Shortcuts\" on when you will see a message \"This shortcut cannot be opened because your Shortcuts security system settings don't allow untrusted shortcuts.\"   Click these links on your iphone and you'll be prompted to download the premade shortcuts (assuming you open the links in Safari browser in iPhone):  Comprehensive Loop Shortcut \n  includes Set Remote Override, Cancel Override, Loop Troubleshooting Tips, Quick Text options, Manual BG entry, Bookmarks to websites, etc.  And if you want to save one click to get to these one functions more directly: these shortcuts are simplified to offer only one function:  Set Remote Override only shortcut  Cancel Override only shortcut  A couple notes about these shortcuts:   You will need iOS 13 at a minimum on the phone you'd like to trigger these shortcuts from. Looper's phone can still be lower than iOS 13, but your phone as the shortcut user would need iOS 13.  You need to open those links in the Safari browser on your iPhone. When you do that click the button to get the shortcut. Then wait a bit, and the shortcut's inner guts will be there...scroll ALL the way down to the bottom to click the button to save the untrusted shortcut.  When you enter your Nightscout URL in the \"URL\" field of the Loop shortcut setup, make sure you don't include a trailing \"/\" or the API calls to Heroku will error out.   When a remote override is set properly, you'll see an \"ok\" message displayed. If there is an error, you'll see an error message. Most errors will be that you have an API secret wrong (make sure there isn't a space at the end of you API Secret that you don't see) or you failed to do the steps to setup NS and update your Loop app as described in steps 1-3 above.  You can absolutely customize these bits and pieces within the shortcut. Change the text messages, change the links...totally up to you.",
            "title": "Shortcuts"
        },
        {
            "location": "/nightscout/remote-overrides/#ifttt",
            "text": "If you want to walk uphill both ways in the snow carrying bags of uneven groceries, you can also set overrides remotely by  setting up IFTTT , too.",
            "title": "IFTTT"
        },
        {
            "location": "/nightscout/remote-overrides/#step-6-known-issues",
            "text": "Just a brief mention so you are aware:   The override pill will display information about what override is currently active in the Looper's phone. BUT, there can be a slight delay as that information is only transmitted every 5 minutes at best (it is tied to Loop runs and Nightscout upload events in Loop). So, wait 5 minutes to see that the information has gone through a refresh cycle before assuming the override message failed to enact.  When you add a new override preset in Loop, that preset has to be uploaded to Nightscout before it will be available as a remote override. To trigger that upload, you can simply enact that new override for a few seconds and turn it off again. that will get the Nightscout upload going.",
            "title": "Step 6: Known Issues"
        },
        {
            "location": "/nightscout/remote-overrides/#step-7-common-errors",
            "text": "Once you've set up remote overrides, you may encounter errors when trying to run them via Nightscout or iOS Shortcuts.  Below are the most common and the typical solutions.   Error: Loop notification failed: Could not find deviceToken in loopSettings  You might see this in either Nightscout or Shortcuts.  The error is most commonly caused by 3 issues: incorrect version of Loop, Loop is not pointing to the right Nightscout instance, or you haven't yet run an override locally (with the Loop app) before trying to run one remotely.   Solution:  check you have the latest version of the Dev branch installed, confirm the Loop app is pointing to the right Nightscout site (and there are not extra spaces or a slash (/) at the end, and always run an override for a few seconds in the Loop app before you try to run one remotely.  Error: cannot POST/api/v2/notifications/loop  You might see this in iOS Shortcuts.  This means Nightscout is not updated correctly and you are running a version of Nightscout that doesn't yet support remote overrides.   Solution:  Follow the steps above again on how to update to the version of Nightscout that supports remote overrides.  Error: {\u201cstatus\u201d:401,\u201dmessage\u201d:\u201dUnauthorized\u201d,\u201ddescription\u201d:Invalid\\/Missing\u201d}  You might see this in iOS Shortcuts.  This is caused by having the incorrect API Secret in the Shortcut.   Solution:  Double check the API Secret is correct and that there are no spaces at the end.  Error: APNs delivery failed: InvalidProviderToken  You might see this in either Nightscout or Shortcuts.  This is caused because your LOOP_APNS_KEY_ID and LOOP_DEVELOPER_TEAM_ID are swapped in Heroku.   Solution:  Double check what's listed in your Apple Developer Account and compare to the config variables in Heroku. Your Team_ID is next to your name in the top right corner.  The other code is your Key_ID. Get the IDs in the correct location in Heroku to resolve the error.",
            "title": "Step 7: Common Errors"
        },
        {
            "location": "/nightscout/ifttt/",
            "text": "IFTTT Integration\n\u2301\n\n\nIf This, Then That (IFTTT) is a useful Nightscout integration.  By using IFTTT, you can have single button presses on your iPhone that will set an override, log a cannula change, log a sensor change and much more. \n\n\nStep 1: Get your API Secret Hash\n\u2301\n\n\nFirst we need to gather one thing called your \"hashed API Secret\". In your internet browser, open a \"console\" window while viewing your Nightscout site.  Make sure you have \"authenticated\" your site by using your API secret in the Nightscout settings area (hint: if you see a little padlock in the upper left corner of the site, you haven't authenticated it).  Refresh the site and your hashed secret key will be shown as \"apisecrethash: \"xxxxxxxxxx...\"\"  \n\n\nFor Safari users on Mac\n, you can open the console window by selecting \"Develop\" from the Safari top menu, and then \"Show Page Source\" (if you do not see \"Develop\" in the top menu, activate it by going to Safari > Preferences... > Advanced, and checking the \"Show Develop menu in menu bar\" option).  If you're having problems seeing the apisecrethash, click the little grey triangle next to the \"status isAuthenticated\" line and the objects below it will display (see screenshot).  Your hashed API secret can be copied and pasted from that line, as shown below.  Save that somewhere easy to get to again, because you will be using it later.\n\n\n\n\n\n\n\n\n\nFor Chrome users\n, the console window is found through the View >> Developer >> View Source. Click on the Console tab and scroll to find the \"status isAuthenticated\" row to find your apisecrethash. Copy your API hash to somewhere you can retreive it again, we will be copy/pasting it in Step 2.\n\n\n\n\n\n\n\n\n\nStep 2: Create your \"Applets\"\n\u2301\n\n\nIFTTT calls their little actions that you'll create an \"applet\". I have no idea why. But, I will go along and use their terminology so we are all consistent. We are basically interested in creating applets that will be buttons on your phone to do cool things in Nightscout. So, you'll have a button that will log when you changed your sensor last...letting you see in Nightscout easily just how old a sensor is at any given time. Or you can create a button that will turn on an \"exercise\" override that you already programmed into your kid's Loop app. So, let's make our first applet (aka button).\n\n\n\n\nGet an \nIFTTT account\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLogin to your IFTTT.com account and select click \nthis link\n to get to the page for creating your first \"New Applet\". (You can also get to this Applet creation page by selecting your Account icon in the upper right of the IFTTT website, then clicking on \"Create\".)\n\n\n\n\n\n\nIn the screen that appears, click on the black \"+this\" part of the screen\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn the next screen, type \"button\" in the search field and then click on the red box labelled \"ButtonWidget\"\n\n\n\n\n\n\n\n\n\n\n\n\n\nConnect the button widget by clicking on the large black\"connect\" button twice, once on the main screen and then second on the pop-up window that will appear immediately after that. (You will only have to \"connect\" the widgets for the first applet you make.  After that the widgets will already connected to your IFTTT account.)\n\n\n\n\n\n\n\n\n\n\n\n\n\nClick on the large red \"button press\" box \n\n\n\n\n\n\n\n\n\n\n\n\n\nClick on the black \"+that\" text\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnter \"Webhooks\" in the search field and click on the Webhooks app\n\n\n\n\n\n\n\n\n\n\n\n\n\nConnect the Webhooks app\n\n\n\n\n\n\n\n\n\n\n\n\n\nSelect the blue \"Make a Web Request\" box\n\n\n\n\n\n\n\n\n\n\n\n\n\nNow you will have a blank web request template to complete.  Screenshot below is an example of a completed recipe for eating soon IFTTT action. There are four parts you will need to fill in, and they are described below the screenshot.\n\n\n\n\n\n\n\n\n\n\n\n\n\nURL\n\n\nhttps://yoursite.herokuapp.com/api/v1/treatments.json\n (for all IFTTT recipes that are NOT remote overrides...so things like cannula changes, sensor changes, pump battery changes, etc.)\n\nChange the \"yoursite\" to your actual site's info.\n\n\n\n\n\n\nMethod\n\n\nThe method will be \nPOST\n\n\n\n\n\n\nContent Type\n\n\nThe content type will be \napplication/json\n. \n\n\n\n\n\n\nBody\n\n\nThe content of the body will depend on the action that you would like this particular button press to perform. While many recipes are available, any recipe that log carbs to NS will only display the carbs in Nightscout...Loop will not \"use\" those carbs in treatment or prediction math. The display of carbs in NS though may still be helpful for remote care givers to leave an indication that a low is being noticed and treated.  Some sample content for actions that may be useful in Loop:\n\n\nPump Site Change\n\n{\"enteredBy\": \"IFTTT-button\", \"eventType\": \"Site Change\", \"duration\": 0, \"secret\": \"your_hashed_api_goes_here!!!\"}\n\n\nCGM Sensor Start\n\n{\"enteredBy\": \"IFTTT-button\", \"eventType\": \"Sensor Start\", \"duration\": 0, \"secret\": \"your_hashed_api_goes_here!!!\"}\n\n\nNote\n\n{\"enteredBy\": \"IFTTT-button\", \"eventType\": \"Note\", \"notes\": \"Hi mom, please don't text me for a bit.  I'm taking a test.\", \"secret\": \"your_hashed_api_goes_here!!!\"}\n\n\n\n\n\n\nSpecial note for IFTTT to set a Remote Override with dev branch\n\n\nTriggering a remote override with IFTTT takes a couple considerations;\n\n1. You have followed \nthe directions for setting up remote overrides\n in Nightscout already.\n\n2. Remote overrides will use \nhttps://yoursite.herokuapp.com/api/v2/notifications/loop\n for the URL line of the applet. Notice that is different from the other type of applets' URL.\n\n3. The Body message of the applet needs to match the override already programmed in Loop app; the reason, reasonDisplay, and duration all need to match what is preset in your Loop app. The \"duration\" is giving in minutes in the body message (vs hours in Loop), and if the override is one that is \"enabled indefinitely\" then the duration is \"infinite\". The \"reason\" is the name of the override but NO EMOJI, and the \"reasonDisplay\" is the override name with the emoji. Check out the samples Body messages for overrides below. You will have to edit your body messages to match your reason and reasonDisplay. The target range and duration of the override does not need to be specified. \n\n\nBody message for override named \"hormones\"\n\n{\"eventType\": \"Temporary Override\", \"reason\": \"hormones\", \"reasonDisplay\": \"\ud83e\udddf\u200d\u2640\ufe0f hormones\", \"secret\": \"your_hashed_api_goes_here!!!\"}\n\n\nBody message for override named \"running\"\n\n{\"eventType\": \"Temporary Override\", \"reason\": \"running\", \"reasonDisplay\": \"\ud83c\udfc3\u200d\u2640\ufe0f running\", \"secret\": \"your_hashed_api_goes_here!!!\"}\n\n\nBody message for override named \"Low Treatment\"\n\n{\"eventType\": \"Temporary Override\", \"reason\": \"Low Treatment\", \"reasonDisplay\": \"\ud83c\udf6c Low Treatment\", \"secret\": \"your_hashed_api_goes_here!!!\"}\n\n\nBody message to cancel any override\n\n{\"eventType\": \"Temporary Override Cancel\", \"secret\": \"your_hashed_api_goes_here!!!\"}\n\n\n\n\n\n\n\n\nClick the \nCreate Action\n button on the bottom of the screen when you finish.\n\n\n\n\n\n\nNow is your chance to change the title of your applet now to something meaningful.  You can turn on notifications, too, using the slider shown. If you turn on the notifications, you will get an alert on your phone and pebble watch when the button press has been successfully deployed.  Finish the IFTTT button by clicking on the Finish button that appears.  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRepeat the setup for new applets for as many automated actions/overrides as you would like to setup.\n\n\n\n\n\n\n\n\n\n\n\nStep 3: Enable IFTTT in your Nightscout site\n\u2301\n\n\nNow that we have cool applets made, we need to give Nightscout some information so that it will accept commands from our applets. It's pretty simple to do...just a couple additions to your Heroku settings.\n\n\n\n\nFind your Maker Key by going to your IFTTT account icon in upper right corner, choose \"My services\" and then click on the Webhooks service, settings.\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\nYou will see your Maker Key as the last part of the URL after the \nuse/\n; copy and paste that last part (the red circled part as shown)\n\n\n\n\n\n\n\n\n\n\n\n\n\nLogin to your Nightscout site host (azure or heroku) and (1) add your Maker Key to the MAKER_KEY line and (2) add \"maker\" to your ENABLE line.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStep 4: Install IFTTT app on your iPhone/Android\n\u2301\n\n\nNow that all the hard work is done, we can take easy street and just add that work to the phone via the IFTTT app. By accessing the IFTTT widget on your iPhone, you'll be able to easily and quickly access the useful buttons you've just created.\n\n\n\n\n\n\nDownload the IFTTT app on your phone and log in using your IFTTT account.\n\n\n\n\n\n\nFor iPhone users, if you swipe right from your iPhone's home screen, you will have the Today view showing.  Scroll to the bottom, click \"edit\". This should show a list of existing widgets, followed by a list of \"more widgets\" with green + signs.  Click on the IFTTT's green circle and the widget will be moved to the top, active widgets area.  You can hold your finger on the three left lines of the IFTTT widget row to drag it to the top of your widget panel, if you prefer to have it as the top-most widget. \n\n\n\n\n\n\n\n\n\n\n\n\n\nIf you end up with more than four IFTTT applets, they will appear in reverse-order of when they were created...which may not be the same as you'd prefer them to appear on your widget bar.  If you'd like to reorder them:\n\n\n\n\ngo into your iPhone's IFTTT app\n\n\nclick on My Applets\n\n\nclick on the gear icon in upper left of screen\n\n\nclick on Widgets\n\n\nclick on the pencil icon in upper right of screen\n\n\nclick and hold the three lines that appear on the right side of the widget that you want to move.  Drag the widget to the order in the list that you'd like it to appear in your widget quickscreen.\n\n\n\n\n\n\n\n\n\n\n\nExtra Credit: Alexa integration\n\u2301\n\n\n\n\nSince you have IFTTT/Maker requests working, you can get it to work with anything that supports IFTTT, including Alexa. You will need to add \"alexa\" to your ENABLE line in your Heroku settings.  And then repeat the steps above, but instead of using \"ButtonWidget\" service we started with earlier (the \"+if\" part of the setup)...you will use the \"AmazonAlexa\" service.\n\n\n\n\n\n\n\n\n\n\n\n\n\nAlexa requests do not need underscores, FYI.",
            "title": "IFTTT"
        },
        {
            "location": "/nightscout/ifttt/#ifttt-integration",
            "text": "If This, Then That (IFTTT) is a useful Nightscout integration.  By using IFTTT, you can have single button presses on your iPhone that will set an override, log a cannula change, log a sensor change and much more.",
            "title": "IFTTT Integration"
        },
        {
            "location": "/nightscout/ifttt/#step-1-get-your-api-secret-hash",
            "text": "First we need to gather one thing called your \"hashed API Secret\". In your internet browser, open a \"console\" window while viewing your Nightscout site.  Make sure you have \"authenticated\" your site by using your API secret in the Nightscout settings area (hint: if you see a little padlock in the upper left corner of the site, you haven't authenticated it).  Refresh the site and your hashed secret key will be shown as \"apisecrethash: \"xxxxxxxxxx...\"\"    For Safari users on Mac , you can open the console window by selecting \"Develop\" from the Safari top menu, and then \"Show Page Source\" (if you do not see \"Develop\" in the top menu, activate it by going to Safari > Preferences... > Advanced, and checking the \"Show Develop menu in menu bar\" option).  If you're having problems seeing the apisecrethash, click the little grey triangle next to the \"status isAuthenticated\" line and the objects below it will display (see screenshot).  Your hashed API secret can be copied and pasted from that line, as shown below.  Save that somewhere easy to get to again, because you will be using it later.     For Chrome users , the console window is found through the View >> Developer >> View Source. Click on the Console tab and scroll to find the \"status isAuthenticated\" row to find your apisecrethash. Copy your API hash to somewhere you can retreive it again, we will be copy/pasting it in Step 2.",
            "title": "Step 1: Get your API Secret Hash"
        },
        {
            "location": "/nightscout/ifttt/#step-2-create-your-applets",
            "text": "IFTTT calls their little actions that you'll create an \"applet\". I have no idea why. But, I will go along and use their terminology so we are all consistent. We are basically interested in creating applets that will be buttons on your phone to do cool things in Nightscout. So, you'll have a button that will log when you changed your sensor last...letting you see in Nightscout easily just how old a sensor is at any given time. Or you can create a button that will turn on an \"exercise\" override that you already programmed into your kid's Loop app. So, let's make our first applet (aka button).   Get an  IFTTT account          Login to your IFTTT.com account and select click  this link  to get to the page for creating your first \"New Applet\". (You can also get to this Applet creation page by selecting your Account icon in the upper right of the IFTTT website, then clicking on \"Create\".)    In the screen that appears, click on the black \"+this\" part of the screen        In the next screen, type \"button\" in the search field and then click on the red box labelled \"ButtonWidget\"       Connect the button widget by clicking on the large black\"connect\" button twice, once on the main screen and then second on the pop-up window that will appear immediately after that. (You will only have to \"connect\" the widgets for the first applet you make.  After that the widgets will already connected to your IFTTT account.)       Click on the large red \"button press\" box        Click on the black \"+that\" text       Enter \"Webhooks\" in the search field and click on the Webhooks app       Connect the Webhooks app       Select the blue \"Make a Web Request\" box       Now you will have a blank web request template to complete.  Screenshot below is an example of a completed recipe for eating soon IFTTT action. There are four parts you will need to fill in, and they are described below the screenshot.       URL  https://yoursite.herokuapp.com/api/v1/treatments.json  (for all IFTTT recipes that are NOT remote overrides...so things like cannula changes, sensor changes, pump battery changes, etc.) \nChange the \"yoursite\" to your actual site's info.    Method  The method will be  POST    Content Type  The content type will be  application/json .     Body  The content of the body will depend on the action that you would like this particular button press to perform. While many recipes are available, any recipe that log carbs to NS will only display the carbs in Nightscout...Loop will not \"use\" those carbs in treatment or prediction math. The display of carbs in NS though may still be helpful for remote care givers to leave an indication that a low is being noticed and treated.  Some sample content for actions that may be useful in Loop:  Pump Site Change \n{\"enteredBy\": \"IFTTT-button\", \"eventType\": \"Site Change\", \"duration\": 0, \"secret\": \"your_hashed_api_goes_here!!!\"}  CGM Sensor Start \n{\"enteredBy\": \"IFTTT-button\", \"eventType\": \"Sensor Start\", \"duration\": 0, \"secret\": \"your_hashed_api_goes_here!!!\"}  Note \n{\"enteredBy\": \"IFTTT-button\", \"eventType\": \"Note\", \"notes\": \"Hi mom, please don't text me for a bit.  I'm taking a test.\", \"secret\": \"your_hashed_api_goes_here!!!\"}    Special note for IFTTT to set a Remote Override with dev branch  Triggering a remote override with IFTTT takes a couple considerations; \n1. You have followed  the directions for setting up remote overrides  in Nightscout already. \n2. Remote overrides will use  https://yoursite.herokuapp.com/api/v2/notifications/loop  for the URL line of the applet. Notice that is different from the other type of applets' URL. \n3. The Body message of the applet needs to match the override already programmed in Loop app; the reason, reasonDisplay, and duration all need to match what is preset in your Loop app. The \"duration\" is giving in minutes in the body message (vs hours in Loop), and if the override is one that is \"enabled indefinitely\" then the duration is \"infinite\". The \"reason\" is the name of the override but NO EMOJI, and the \"reasonDisplay\" is the override name with the emoji. Check out the samples Body messages for overrides below. You will have to edit your body messages to match your reason and reasonDisplay. The target range and duration of the override does not need to be specified.   Body message for override named \"hormones\" \n{\"eventType\": \"Temporary Override\", \"reason\": \"hormones\", \"reasonDisplay\": \"\ud83e\udddf\u200d\u2640\ufe0f hormones\", \"secret\": \"your_hashed_api_goes_here!!!\"}  Body message for override named \"running\" \n{\"eventType\": \"Temporary Override\", \"reason\": \"running\", \"reasonDisplay\": \"\ud83c\udfc3\u200d\u2640\ufe0f running\", \"secret\": \"your_hashed_api_goes_here!!!\"}  Body message for override named \"Low Treatment\" \n{\"eventType\": \"Temporary Override\", \"reason\": \"Low Treatment\", \"reasonDisplay\": \"\ud83c\udf6c Low Treatment\", \"secret\": \"your_hashed_api_goes_here!!!\"}  Body message to cancel any override \n{\"eventType\": \"Temporary Override Cancel\", \"secret\": \"your_hashed_api_goes_here!!!\"}     Click the  Create Action  button on the bottom of the screen when you finish.    Now is your chance to change the title of your applet now to something meaningful.  You can turn on notifications, too, using the slider shown. If you turn on the notifications, you will get an alert on your phone and pebble watch when the button press has been successfully deployed.  Finish the IFTTT button by clicking on the Finish button that appears.          Repeat the setup for new applets for as many automated actions/overrides as you would like to setup.",
            "title": "Step 2: Create your \"Applets\""
        },
        {
            "location": "/nightscout/ifttt/#step-3-enable-ifttt-in-your-nightscout-site",
            "text": "Now that we have cool applets made, we need to give Nightscout some information so that it will accept commands from our applets. It's pretty simple to do...just a couple additions to your Heroku settings.   Find your Maker Key by going to your IFTTT account icon in upper right corner, choose \"My services\" and then click on the Webhooks service, settings.          You will see your Maker Key as the last part of the URL after the  use/ ; copy and paste that last part (the red circled part as shown)       Login to your Nightscout site host (azure or heroku) and (1) add your Maker Key to the MAKER_KEY line and (2) add \"maker\" to your ENABLE line.",
            "title": "Step 3: Enable IFTTT in your Nightscout site"
        },
        {
            "location": "/nightscout/ifttt/#step-4-install-ifttt-app-on-your-iphoneandroid",
            "text": "Now that all the hard work is done, we can take easy street and just add that work to the phone via the IFTTT app. By accessing the IFTTT widget on your iPhone, you'll be able to easily and quickly access the useful buttons you've just created.    Download the IFTTT app on your phone and log in using your IFTTT account.    For iPhone users, if you swipe right from your iPhone's home screen, you will have the Today view showing.  Scroll to the bottom, click \"edit\". This should show a list of existing widgets, followed by a list of \"more widgets\" with green + signs.  Click on the IFTTT's green circle and the widget will be moved to the top, active widgets area.  You can hold your finger on the three left lines of the IFTTT widget row to drag it to the top of your widget panel, if you prefer to have it as the top-most widget.        If you end up with more than four IFTTT applets, they will appear in reverse-order of when they were created...which may not be the same as you'd prefer them to appear on your widget bar.  If you'd like to reorder them:   go into your iPhone's IFTTT app  click on My Applets  click on the gear icon in upper left of screen  click on Widgets  click on the pencil icon in upper right of screen  click and hold the three lines that appear on the right side of the widget that you want to move.  Drag the widget to the order in the list that you'd like it to appear in your widget quickscreen.",
            "title": "Step 4: Install IFTTT app on your iPhone/Android"
        },
        {
            "location": "/nightscout/ifttt/#extra-credit-alexa-integration",
            "text": "Since you have IFTTT/Maker requests working, you can get it to work with anything that supports IFTTT, including Alexa. You will need to add \"alexa\" to your ENABLE line in your Heroku settings.  And then repeat the steps above, but instead of using \"ButtonWidget\" service we started with earlier (the \"+if\" part of the setup)...you will use the \"AmazonAlexa\" service.       Alexa requests do not need underscores, FYI.",
            "title": "Extra Credit: Alexa integration"
        },
        {
            "location": "/nightscout/pebble/",
            "text": "Pebble Watchface\n\u2301\n\n\nThe Pebble Watchface called \nSkyLoop Predict\n can be used with either Loop or OpenAPS systems.  You will need to have a Nightscout website setup and integrated in order for the watchface to work.  Simply use your Pebble app to search for the watchface and install it.  In the watchface settings, enter your Nightscout URL in the Data Endpoint field, select Loop for the system, and enter \niob\n in the T1 Name field.  By entering \niob\n, the watchface will display the iob on the watchface.  In addition to the information displayed on the main watchface screen, shaking your wrist will bring up information about the pump battery and reservoir levels.",
            "title": "Pebble"
        },
        {
            "location": "/nightscout/pebble/#pebble-watchface",
            "text": "The Pebble Watchface called  SkyLoop Predict  can be used with either Loop or OpenAPS systems.  You will need to have a Nightscout website setup and integrated in order for the watchface to work.  Simply use your Pebble app to search for the watchface and install it.  In the watchface settings, enter your Nightscout URL in the Data Endpoint field, select Loop for the system, and enter  iob  in the T1 Name field.  By entering  iob , the watchface will display the iob on the watchface.  In addition to the information displayed on the main watchface screen, shaking your wrist will bring up information about the pump battery and reservoir levels.",
            "title": "Pebble Watchface"
        },
        {
            "location": "/nightscout/pushover/",
            "text": "Remote notifications\n\u2301\n\n\nWhile Loop app currently sends notifications locally on Loop user's iPhone, parents and caregivers likely want those messages on their phones, too.  We can achieve this functionality through a combination of Nightscout, IFTTT, Google, and Pushover.\n\n\nTraditionally, most people may already know of Pushover alerts through their NS site.  The old Loop docs had set up for how to add your \nPUSHOVER_ANNOUNCEMENT_KEY\n , \nPUSHOVER_API_TOKEN\n, and \nPUSHOVER_USER_KEY\n in your Heroku settings to get notifications on the non-looping phones of parents and caregivers.  The drawback for that method is that you could not necessarily fine-tune the alerts (maybe you wanted battery alarms on your NS website, but not get pushovers for them...a bit hard to separate out the environments that way) and Pushover had a demanding acknowledgment requirement.  If you failed to acknowledge an alert, you may end up getting alarm fatigue fairly quickly as the alarm repeated itself.\n\n\nUsing Pushover \nTHROUGH\n IFTTT however, we can improve the possible notifications and who receives which ones.  For example, a teenage Looper may want notifications when his/her pump site needs changing and when his/her Dexcom is about to expire in the next day.  S/he already gets local notifications on his/her phone via Loop for low reservoir volumes, low pump battery, and Loop failures.  Dexcom app provides high/low BG notifications locally, too.  If s/he were to get those same alarms via Pushover, s/he would inevitably get alarm fatigue.  A remotely-monitoring parent may want additional information, like a pushover alert when the school nurse boluses for lunch, as well as Loop failures, low iPhone battery level for the child, low pump battery, and other such information that might be useful.  Perhaps there's also an emergency contact person that you only want to get high/low BG alerts...you can set that up as well quite easily.\n\n\nThe basic concept is that NS puts out an event that triggers the IFTTT service called Webhooks (old name was \"Maker Webhooks\" hence you may see references to \"maker\" in NS docs).  Actually, there are several types of events that NS has programmed in all ready to use in IFTTT.\n\n\n\n\n\n\n\n\n\nFor this setup, we are going to use the most general logging event called \nns-event\n.  You'll get all the alarms and notifications logged, and then you can decide in subsequent steps which ones you'd actually like to send to your phone for pushover notification.\n\n\nAs a brief roadmap for what we are going to do:\n\n\n\n\nGet necessary accounts setup\n\n\nAdd a folder to your Google Drive\n\n\nMake an IFTTT applet to log NS events to your Google Spreadsheets\n\n\nEnable NS to work with that new IFTTT applet\n\n\nMake an IFTTT applet to send Pushover alert when the Google Spreadsheet is updated\n\n\n\n\nGet Prepped\n\u2301\n\n\nIf you don't already have these steps done, you will need them.  Skip any that you already have done.\n\n\n\n\nSetup a Nightscout site\n\n\nGet an \nIFTTT account\n\n\nGet a \nPushover Account\n\n\nGet a \nGoogle Account\n\n\nDownload the Pushover app onto your phone, and any other phone you'd like to receive Pushover alerts\n\n\nDownload the IFTTT app onto your phone, and any other phone you'd like to use IFTTT applets on\n\n\nLogin to the Pushover and IFTTT apps with your login information\n\n\n\n\nAdd a Google Drive folder\n\u2301\n\n\n\n\nLogin to your Google account and select Google Drive\n\n\n\n\n\n\n\n\n\n\n\n\n\nClick on the blue \"New\" button and create a new folder named IFTTT.\n\n\n\n\n\n\n\n\n\n\n\n\n\nDouble click on the newly created IFTTT folder, select the blue \"New\" button again, and create a new subfolder called \"Nightscout-Alarms\"\n\n\n\n\n\n\n\n\n\n\n\nThis IFTTT/Nightscout-Alarms folder will eventually contain numerous Google Spreadsheets, one for each NS alarm or information that is logged.  As new alarms are triggered, the IFTTT applet we are about to write will add a row to the appropriate spreadsheet logging the time of the alarm and any other reported details that go with the entry.  For now though, your drive will be blank...screenshot below just to give you an idea of where we are going.\n\n\n\n\n\n\n\n\n\nMake 1st IFTTT Applet to Log NS Alarms\n\u2301\n\n\n\n\nLogin to your IFTTT.com account and select the \"New Applet\" button.\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn the screen that appears, click on the blue \"+this\" part of the screen\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn the next screen, type \"webhooks\" in the search field and then click on the blue connect button\n\n\n\n\n\n\n\n\n\n\n\n\n\nIf this is the first time you are using IFTTT Webhooks service, you will have a \"Connect\" button to select.  If you already have IFTTT applets using Webhooks, you won't see this screen...just move to the next bullet.\n\n\n\n\n\n\n\n\n\n\n\n\n\nClick on the \"receive a web request\" blue box, and then fill in the Event Name as \nns-event\n and then press the \"Create trigger\" button.  (Side note:  the event name used here corresponds to the triggers discussed above for core events that NS already has integrated for IFTTT users.  If you want to, instead, use the other triggers such as ns-warn or ns-urgent, you can.  This example is using the most general trigger so that the options are wider for most users.)\n\n\n\n\n\n\n\n\n\n\n\n\n\nClick on the blue \"+that\" text\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnter \ngoogle\n in the search field and click on the Google Sheets icon\n\n\n\n\n\n\n\n\n\n\n\n\n\nSelect the green \"Add row to spreadsheet\" box\n\n\n\n\n\n\n\n\n\n\n\n\n\nDelete the contents of the \"Spreadsheet Name\" and \"Drive folder path\".  For the \"Spreadsheet Name\", click the \"Add Ingredient\" button and select the \"Value1\".  For the \"Drive folder path\", enter \nIFTTT/Nightscout-Alarms\n.  You do not have to modify the \"Formatted row\" box's contents.  Click the \"Create action\" button at the bottom.\n\n\n\n\n\n\n\n\n\n\n\n\n\nTurn off the toggle for receiving notifications when the applet runs, and then click the Finish button\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou'll now have the finished IFTTT applet that will cause a row to be added to a Google spreadsheet...tracking all your NS notifications and alarms.  If it is the first time that alarm has been logged, the applet will also create the spreadsheet itself.  After a while, your IFTTT/Nightscout-Alarms folder will start to look like the screenshot posted above with numerous spreadsheets for each alarm type.\n\n\n\n\n\n\n\n\n\n\n\nEnable IFTTT Webhooks in your Nightscout site\n\u2301\n\n\n\n\nIf you already have created IFTTT buttons previously to work with your NS site, you can skip this section.  If those buttons are working, then you've already added your MAKER_KEY and \"maker\" to your ENABLE line in Heroku.\n\n\n\n\n\n\nTo actually make that first applet work, we need to enter a \"Maker Key\" to get NS and IFTTT talking to each other.  Find your Maker Key by going to your IFTTT account, Services and then clicking on Webhooks.  (Your screen may not have as many services showing; the example account below just happens to already use several services.)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou will see your Maker Key as the last part of the URL; copy that last part (the red circled part)\n\n\n\n\n\n\n\n\n\n\n\n\n\nNavigate to your Heroku account's settings tab, \"reveal config vars\" and (1) add your Maker Key to the MAKER_KEY line and (2) add \"maker\" to your ENABLE line.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMake 2nd IFTTT Applet to send Pushover notifications\n\u2301\n\n\n\n\nIn your IFTTT account, select the \"New Applet\" button.\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn the screen that appears, click on the blue \"+this\" part of the screen\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn the next screen, type \"google\" in the search field and then click on the \"Google Sheets\" logo.\n\n\n\n\n\n\n\n\n\n\n\n\n\nClick on the \"New row added to spreadsheet\" as the trigger.\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnter the following information:  Folder path is \nIFTTT/Nightscout-Alarms\n and for the filename you are going to enter the name of the particular NS alarm or information that you would like to get pushover alerts for.  Click on the \"Create trigger\" button to save the trigger.\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis applet can't be created unless your filename (alarm spreadsheet) already exists.  If your 1st applet we created above hasn't run for a long time, the spreadsheets may not exist yet because the alarms haven't triggered.  You have two options...(1) manually create the file in your Google Drive so that you can finish the applet now or (2) wait several days/weeks for the alarms to happen and that will automatically create the files in your Google drive.\n\nIf you choose option 1, here's a partial list of some of the filenames you could create in advance:\n\n\n\n\nLoop isn't looping\n\n\nCannula age 48 hours\n\n\nCannula age 72 hours\n\n\nMeal Bolus\n\n\nWarning, Pump Reservoir Low\n\n\nWarning Uploader Battery is Low\n\n\nTemporary Override\n\n\n\n\nDepending on your alert levels you specified in NS, some of the hours in the titles may vary to match your settings\n\n\n\n\n\n\nClick on the blue \"+that\" text\n\n\n\n\n\n\n\n\n\n\n\n\n\nEnter \npushover\n in the search field and click on the Pushover icon.  If this is your first time linking your IFTTT to Pushover, you will be prompted to enter your Pushover account login and allow IFTTT access.  This only needs to be done once.\n\n\n\n\n\n\n\n\n\n\n\n\n\nSelect the \"Send a Pushover notification\" box\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDelete the contents of the \"Title\" and \"Message\" and \"URL\" boxes.  For the Title, click the \"Add Ingredient\" button and add \nColumnC\n.  For the \"Message\", click the \"Add Ingredient\" button and add the values of various columns from your spreadsheet for the information you would like to include.  For the alerts: \nColumnC\n contains the alarm name, \nColumnA\n is the date/time of the alarm, and \nColumnD\n has more detailed information about the info/alarm.  This is a pretty decent recipe to follow to get the useful information in your notification.\n\n\n\n\n\n\n\n\n\n\n\nSelect the \"Message Priority\" that you would like for this particular alarm type.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSelect the \"Device\" that you would like to receive this particular alarm type.  The devices listed will be all your devices that have Pushover app installed and logged into.  Click \"Create Action\" when you are finished.\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou'll now have made the IFTTT applet that will cause a Pushover notification to a particular device for a particular NS alarm, once the first applet records the alarm in the google spreadsheet.  Keep the \"receive notification when this Applet runs\" toggled off and click the Finish button.\n\n\n\n\n\n\n\n\n\n\n\nRevisit Nightscout Alert Levels\n\u2301\n\n\nPutting all these notifications together may cause you to want to revisit the alert levels you have set in your Heroku settings.  Here's a short summary of NS for the looping-related alerts (Note: the last row, Upbat, is the Looping iPhone battery level for Loop users; or the rig's battery level for OpenAPS users.)  If you'd like some of these alarms for your site and don't currently have them activated (they are all off by default unless specifically turned on), the lines you'd need to add are in the last column.  If you like the default values of the WARN and/or URGENT, you don't have to add those extra lines...just the line to enable the alerts will be sufficient.\n\n\n\n\n\n\n\n\nSETTING\n\n\nDEFAULT\nWARN\n\n\nDEFAULT\nURGENT\n\n\nHEROKU\nSETTINGS\n\n\n\n\n\n\n\n\n\n\nCAGE\n\n\n48\n\n\n72\n\n\nCAGE_ENABLE_ALERTS = true\nCAGE_WARN=XX\nCAGE_URGENT=XX\n\n\n\n\n\n\nSAGE\n\n\n164\n\n\n168\n\n\nSAGE_ENABLE_ALERTS = true\nSAGE_WARN=XX\nSAGE_URGENT=XX\n\n\n\n\n\n\nIAGE\n\n\n48\n\n\n72\n\n\nIAGE_ENABLE_ALERTS = true\nIAGE_WARN=XX\nIAGE_URGENT=XX\n\n\n\n\n\n\nLOOP\n\n\n30\n\n\n60\n\n\nLOOP_ENABLE_ALERTS = true\nLOOP_WARN=XX\nLOOP_URGENT=XX\n\n\n\n\n\n\nOPENAPS\n\n\n30\n\n\n60\n\n\nOPENAPS_ENABLE_ALERTS = true\nOPENAPS_WARN=XX\nOPENAPS_URGENT=XX\n\n\n\n\n\n\nPUMP_CLOCK\n\n\n30\n\n\n60\n\n\nPUMP_ENABLE_ALERTS = true\nPUMP_WARN_CLOCK=XX\nPUMP_URGENT_CLOCK=XX\n\n\n\n\n\n\nPUMP_RES\n\n\n10\n\n\n5\n\n\nPUMP_ENABLE_ALERTS = true\nPUMP_WARN_RES=XX\nPUMP_URGENT_RES=XX\n\n\n\n\n\n\nPUMP_BATT_P\n\n\n30\n\n\n20\n\n\nPUMP_ENABLE_ALERTS = true\nPUMP_WARN_BATT_P=XX\nPUMP_URGENT_BATT_P=XX\n\n\n\n\n\n\nPUMP_BATT_V\n\n\n1.35\n\n\n1.30\n\n\nPUMP_ENABLE_ALERTS = true\nPUMP_WARN_BATT_V=XX\nPUMP_URGENT_BATT_V=XX\n\n\n\n\n\n\nUPBAT\n\n\n30\n\n\n20\n\n\nUPBAT_ENABLE_ALERTS = true\nUPBAT_WARN=XX\nUPBAT_URGENT=XX\n\n\n\n\n\n\n\n\n\nFinal notes\n\u2301\n\n\n\n\n\n\nYou can use other notification services than Pushover in the last part of the second applet.  For example, you could use the SMS service to send text notifications to your iPhone instead of Pushover.  The downside for that is that the SMS service is limited to 100 message each month...some users may exceed that pretty easily.  Another alternative notification would be IFTTT's own Notification service.  This would work well, but does not have the ability to distinguish between devices the way Pushover allows.  If you use IFTTT's Notifications service, every phone using your IFTTT account will get the notices.\n\n\n\n\n\n\nTo be clear, you do \nNOT\n need to have pushover on your ENABLE line nor have \nPUSHOVER_USER_KEY\n, \nPUSHOVER_API_TOKEN\n, or \nPUSHOVER_ANNOUNCEMENT_KEY\n entered into your Heroku settings in order for any of the above to work.  This is not the same Pushover as NS has integrated into its code.  This is actually through IFTTT services, you just need a Pushover account to link to during the 2nd applet setup.\n\n\n\n\n\n\nTo create more notifications, simply repeat the steps for the 2nd applet you created, only this time use a new filename that corresponds to the spreadsheet tracking the alert you'd like notifications for.  You'll end up with multiple applets of the dark blue type (the pushover notifiers) and only a single light blue (NS alarm general collector).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHere are examples of the Meal Bolus and Temp Basal ns-event logging spreadsheets\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe 1st applet can only create up to 2000 active rows in a given spreadsheet.  After that, the applet will automatically create a new spreadsheet.  For most alarms, it may take quite some time to reach 2000 rows of info.  For other alerts, such as temp basals being set, that may fill up rather fast for the average looper.  You can either clean out the data rows periodically to make room, or update your filename in the 2nd applet periodically when a new spreadsheet is made.",
            "title": "Remote Notifications"
        },
        {
            "location": "/nightscout/pushover/#remote-notifications",
            "text": "While Loop app currently sends notifications locally on Loop user's iPhone, parents and caregivers likely want those messages on their phones, too.  We can achieve this functionality through a combination of Nightscout, IFTTT, Google, and Pushover.  Traditionally, most people may already know of Pushover alerts through their NS site.  The old Loop docs had set up for how to add your  PUSHOVER_ANNOUNCEMENT_KEY  ,  PUSHOVER_API_TOKEN , and  PUSHOVER_USER_KEY  in your Heroku settings to get notifications on the non-looping phones of parents and caregivers.  The drawback for that method is that you could not necessarily fine-tune the alerts (maybe you wanted battery alarms on your NS website, but not get pushovers for them...a bit hard to separate out the environments that way) and Pushover had a demanding acknowledgment requirement.  If you failed to acknowledge an alert, you may end up getting alarm fatigue fairly quickly as the alarm repeated itself.  Using Pushover  THROUGH  IFTTT however, we can improve the possible notifications and who receives which ones.  For example, a teenage Looper may want notifications when his/her pump site needs changing and when his/her Dexcom is about to expire in the next day.  S/he already gets local notifications on his/her phone via Loop for low reservoir volumes, low pump battery, and Loop failures.  Dexcom app provides high/low BG notifications locally, too.  If s/he were to get those same alarms via Pushover, s/he would inevitably get alarm fatigue.  A remotely-monitoring parent may want additional information, like a pushover alert when the school nurse boluses for lunch, as well as Loop failures, low iPhone battery level for the child, low pump battery, and other such information that might be useful.  Perhaps there's also an emergency contact person that you only want to get high/low BG alerts...you can set that up as well quite easily.  The basic concept is that NS puts out an event that triggers the IFTTT service called Webhooks (old name was \"Maker Webhooks\" hence you may see references to \"maker\" in NS docs).  Actually, there are several types of events that NS has programmed in all ready to use in IFTTT.     For this setup, we are going to use the most general logging event called  ns-event .  You'll get all the alarms and notifications logged, and then you can decide in subsequent steps which ones you'd actually like to send to your phone for pushover notification.  As a brief roadmap for what we are going to do:   Get necessary accounts setup  Add a folder to your Google Drive  Make an IFTTT applet to log NS events to your Google Spreadsheets  Enable NS to work with that new IFTTT applet  Make an IFTTT applet to send Pushover alert when the Google Spreadsheet is updated",
            "title": "Remote notifications"
        },
        {
            "location": "/nightscout/pushover/#get-prepped",
            "text": "If you don't already have these steps done, you will need them.  Skip any that you already have done.   Setup a Nightscout site  Get an  IFTTT account  Get a  Pushover Account  Get a  Google Account  Download the Pushover app onto your phone, and any other phone you'd like to receive Pushover alerts  Download the IFTTT app onto your phone, and any other phone you'd like to use IFTTT applets on  Login to the Pushover and IFTTT apps with your login information",
            "title": "Get Prepped"
        },
        {
            "location": "/nightscout/pushover/#add-a-google-drive-folder",
            "text": "Login to your Google account and select Google Drive       Click on the blue \"New\" button and create a new folder named IFTTT.       Double click on the newly created IFTTT folder, select the blue \"New\" button again, and create a new subfolder called \"Nightscout-Alarms\"      This IFTTT/Nightscout-Alarms folder will eventually contain numerous Google Spreadsheets, one for each NS alarm or information that is logged.  As new alarms are triggered, the IFTTT applet we are about to write will add a row to the appropriate spreadsheet logging the time of the alarm and any other reported details that go with the entry.  For now though, your drive will be blank...screenshot below just to give you an idea of where we are going.",
            "title": "Add a Google Drive folder"
        },
        {
            "location": "/nightscout/pushover/#make-1st-ifttt-applet-to-log-ns-alarms",
            "text": "Login to your IFTTT.com account and select the \"New Applet\" button.       In the screen that appears, click on the blue \"+this\" part of the screen       In the next screen, type \"webhooks\" in the search field and then click on the blue connect button       If this is the first time you are using IFTTT Webhooks service, you will have a \"Connect\" button to select.  If you already have IFTTT applets using Webhooks, you won't see this screen...just move to the next bullet.       Click on the \"receive a web request\" blue box, and then fill in the Event Name as  ns-event  and then press the \"Create trigger\" button.  (Side note:  the event name used here corresponds to the triggers discussed above for core events that NS already has integrated for IFTTT users.  If you want to, instead, use the other triggers such as ns-warn or ns-urgent, you can.  This example is using the most general trigger so that the options are wider for most users.)       Click on the blue \"+that\" text       Enter  google  in the search field and click on the Google Sheets icon       Select the green \"Add row to spreadsheet\" box       Delete the contents of the \"Spreadsheet Name\" and \"Drive folder path\".  For the \"Spreadsheet Name\", click the \"Add Ingredient\" button and select the \"Value1\".  For the \"Drive folder path\", enter  IFTTT/Nightscout-Alarms .  You do not have to modify the \"Formatted row\" box's contents.  Click the \"Create action\" button at the bottom.       Turn off the toggle for receiving notifications when the applet runs, and then click the Finish button       You'll now have the finished IFTTT applet that will cause a row to be added to a Google spreadsheet...tracking all your NS notifications and alarms.  If it is the first time that alarm has been logged, the applet will also create the spreadsheet itself.  After a while, your IFTTT/Nightscout-Alarms folder will start to look like the screenshot posted above with numerous spreadsheets for each alarm type.",
            "title": "Make 1st IFTTT Applet to Log NS Alarms"
        },
        {
            "location": "/nightscout/pushover/#enable-ifttt-webhooks-in-your-nightscout-site",
            "text": "If you already have created IFTTT buttons previously to work with your NS site, you can skip this section.  If those buttons are working, then you've already added your MAKER_KEY and \"maker\" to your ENABLE line in Heroku.    To actually make that first applet work, we need to enter a \"Maker Key\" to get NS and IFTTT talking to each other.  Find your Maker Key by going to your IFTTT account, Services and then clicking on Webhooks.  (Your screen may not have as many services showing; the example account below just happens to already use several services.)           You will see your Maker Key as the last part of the URL; copy that last part (the red circled part)       Navigate to your Heroku account's settings tab, \"reveal config vars\" and (1) add your Maker Key to the MAKER_KEY line and (2) add \"maker\" to your ENABLE line.",
            "title": "Enable IFTTT Webhooks in your Nightscout site"
        },
        {
            "location": "/nightscout/pushover/#make-2nd-ifttt-applet-to-send-pushover-notifications",
            "text": "In your IFTTT account, select the \"New Applet\" button.       In the screen that appears, click on the blue \"+this\" part of the screen       In the next screen, type \"google\" in the search field and then click on the \"Google Sheets\" logo.       Click on the \"New row added to spreadsheet\" as the trigger.       Enter the following information:  Folder path is  IFTTT/Nightscout-Alarms  and for the filename you are going to enter the name of the particular NS alarm or information that you would like to get pushover alerts for.  Click on the \"Create trigger\" button to save the trigger.       This applet can't be created unless your filename (alarm spreadsheet) already exists.  If your 1st applet we created above hasn't run for a long time, the spreadsheets may not exist yet because the alarms haven't triggered.  You have two options...(1) manually create the file in your Google Drive so that you can finish the applet now or (2) wait several days/weeks for the alarms to happen and that will automatically create the files in your Google drive. \nIf you choose option 1, here's a partial list of some of the filenames you could create in advance:   Loop isn't looping  Cannula age 48 hours  Cannula age 72 hours  Meal Bolus  Warning, Pump Reservoir Low  Warning Uploader Battery is Low  Temporary Override   Depending on your alert levels you specified in NS, some of the hours in the titles may vary to match your settings    Click on the blue \"+that\" text       Enter  pushover  in the search field and click on the Pushover icon.  If this is your first time linking your IFTTT to Pushover, you will be prompted to enter your Pushover account login and allow IFTTT access.  This only needs to be done once.       Select the \"Send a Pushover notification\" box        Delete the contents of the \"Title\" and \"Message\" and \"URL\" boxes.  For the Title, click the \"Add Ingredient\" button and add  ColumnC .  For the \"Message\", click the \"Add Ingredient\" button and add the values of various columns from your spreadsheet for the information you would like to include.  For the alerts:  ColumnC  contains the alarm name,  ColumnA  is the date/time of the alarm, and  ColumnD  has more detailed information about the info/alarm.  This is a pretty decent recipe to follow to get the useful information in your notification.      Select the \"Message Priority\" that you would like for this particular alarm type.        Select the \"Device\" that you would like to receive this particular alarm type.  The devices listed will be all your devices that have Pushover app installed and logged into.  Click \"Create Action\" when you are finished.       You'll now have made the IFTTT applet that will cause a Pushover notification to a particular device for a particular NS alarm, once the first applet records the alarm in the google spreadsheet.  Keep the \"receive notification when this Applet runs\" toggled off and click the Finish button.",
            "title": "Make 2nd IFTTT Applet to send Pushover notifications"
        },
        {
            "location": "/nightscout/pushover/#revisit-nightscout-alert-levels",
            "text": "Putting all these notifications together may cause you to want to revisit the alert levels you have set in your Heroku settings.  Here's a short summary of NS for the looping-related alerts (Note: the last row, Upbat, is the Looping iPhone battery level for Loop users; or the rig's battery level for OpenAPS users.)  If you'd like some of these alarms for your site and don't currently have them activated (they are all off by default unless specifically turned on), the lines you'd need to add are in the last column.  If you like the default values of the WARN and/or URGENT, you don't have to add those extra lines...just the line to enable the alerts will be sufficient.     SETTING  DEFAULT WARN  DEFAULT URGENT  HEROKU SETTINGS      CAGE  48  72  CAGE_ENABLE_ALERTS = true CAGE_WARN=XX CAGE_URGENT=XX    SAGE  164  168  SAGE_ENABLE_ALERTS = true SAGE_WARN=XX SAGE_URGENT=XX    IAGE  48  72  IAGE_ENABLE_ALERTS = true IAGE_WARN=XX IAGE_URGENT=XX    LOOP  30  60  LOOP_ENABLE_ALERTS = true LOOP_WARN=XX LOOP_URGENT=XX    OPENAPS  30  60  OPENAPS_ENABLE_ALERTS = true OPENAPS_WARN=XX OPENAPS_URGENT=XX    PUMP_CLOCK  30  60  PUMP_ENABLE_ALERTS = true PUMP_WARN_CLOCK=XX PUMP_URGENT_CLOCK=XX    PUMP_RES  10  5  PUMP_ENABLE_ALERTS = true PUMP_WARN_RES=XX PUMP_URGENT_RES=XX    PUMP_BATT_P  30  20  PUMP_ENABLE_ALERTS = true PUMP_WARN_BATT_P=XX PUMP_URGENT_BATT_P=XX    PUMP_BATT_V  1.35  1.30  PUMP_ENABLE_ALERTS = true PUMP_WARN_BATT_V=XX PUMP_URGENT_BATT_V=XX    UPBAT  30  20  UPBAT_ENABLE_ALERTS = true UPBAT_WARN=XX UPBAT_URGENT=XX",
            "title": "Revisit Nightscout Alert Levels"
        },
        {
            "location": "/nightscout/pushover/#final-notes",
            "text": "You can use other notification services than Pushover in the last part of the second applet.  For example, you could use the SMS service to send text notifications to your iPhone instead of Pushover.  The downside for that is that the SMS service is limited to 100 message each month...some users may exceed that pretty easily.  Another alternative notification would be IFTTT's own Notification service.  This would work well, but does not have the ability to distinguish between devices the way Pushover allows.  If you use IFTTT's Notifications service, every phone using your IFTTT account will get the notices.    To be clear, you do  NOT  need to have pushover on your ENABLE line nor have  PUSHOVER_USER_KEY ,  PUSHOVER_API_TOKEN , or  PUSHOVER_ANNOUNCEMENT_KEY  entered into your Heroku settings in order for any of the above to work.  This is not the same Pushover as NS has integrated into its code.  This is actually through IFTTT services, you just need a Pushover account to link to during the 2nd applet setup.    To create more notifications, simply repeat the steps for the 2nd applet you created, only this time use a new filename that corresponds to the spreadsheet tracking the alert you'd like notifications for.  You'll end up with multiple applets of the dark blue type (the pushover notifiers) and only a single light blue (NS alarm general collector).        Here are examples of the Meal Bolus and Temp Basal ns-event logging spreadsheets          The 1st applet can only create up to 2000 active rows in a given spreadsheet.  After that, the applet will automatically create a new spreadsheet.  For most alarms, it may take quite some time to reach 2000 rows of info.  For other alerts, such as temp basals being set, that may fill up rather fast for the average looper.  You can either clean out the data rows periodically to make room, or update your filename in the 2nd applet periodically when a new spreadsheet is made.",
            "title": "Final notes"
        },
        {
            "location": "/nightscout/reports/",
            "text": "Reports\n\u2301\n\n\nNightscout offers some fantastic data-crunching report tools in the settings area (the upper right corner, three horizontal lines).  You can play around with various date ranges, target ranges, and provide reports to your endocrinologist to review.",
            "title": "Reports"
        },
        {
            "location": "/nightscout/reports/#reports",
            "text": "Nightscout offers some fantastic data-crunching report tools in the settings area (the upper right corner, three horizontal lines).  You can play around with various date ranges, target ranges, and provide reports to your endocrinologist to review.",
            "title": "Reports"
        }
    ]
}